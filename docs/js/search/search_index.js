var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/AuthService.html",[0,0.839,1,1.293]],["body/injectables/AuthService.html",[0,0.499,1,0.769,2,0.52,3,0.181,4,0.181,5,0.151,6,0.732,7,0.705,8,1.636,9,1.959,10,1.594,11,1.441,12,0.916,13,0.181,14,0.499,15,2.224,16,2.154,17,0.769,18,2.709,19,1.574,20,2.456,21,1.574,22,1.962,23,1.574,24,2.456,25,1.962,26,1.574,27,1.962,28,1.574,29,2.069,30,1.574,31,1.174,32,0.732,33,1.139,34,1.864,35,1.713,36,1.962,37,1.936,38,1.999,39,1.687,40,1.574,41,1.574,42,1.741,43,0.057,44,1.563,45,0.498,46,1.249,47,1.574,48,1.636,49,1.962,50,1.574,51,0.769,52,0.971,53,1.574,54,1.257,55,0.893,56,1.881,57,1.48,58,1.257,59,2.276,60,2.012,61,1.199,62,0.916,63,1.574,64,1.257,65,2.966,66,2.023,67,1.574,68,2.15,69,1.574,70,2.725,71,1.574,72,1.713,73,1.713,74,1.242,75,1.914,76,2.438,77,0.916,78,1.574,79,2.069,80,1.257,81,0.916,82,1.574,83,2.403,84,3.412,85,3.02,86,3.02,87,2.209,88,1.257,89,1.574,90,4.095,91,1.574,92,1.574,93,1.636,94,1.574,95,0.022,96,2.012,97,1.574,98,1.962,99,2.456,100,1.574,101,1.574,102,1.574,103,1.574,104,2.766,105,1.962,106,1.574,107,1.574,108,1.574,109,1.574,110,0.916,111,1.379,112,2.456,113,2.456,114,1.257,115,0.916,116,1.574,117,1.574,118,1.257,119,1.257,120,1.574,121,0.916,122,1.257,123,1.257,124,1.257,125,0.916,126,1.257,127,0.022,128,1.574,129,2.376,130,1.257,131,3.049,132,0.916,133,1.574,134,3.412,135,2.069,136,1.257,137,1.257,138,1.257,139,1.574,140,0.916,141,1.574,142,1.574,143,1.257,144,0.916,145,1.574,146,1.574,147,1.379,148,1.574,149,1.574,150,1.257,151,1.574,152,1.574,153,1.574,154,1.574,155,2.224,156,1.257,157,1.574,158,0.732,159,2.209,160,0.916,161,1.962,162,1.574,163,1.962,164,1.574,165,1.574,166,2.766,167,0.916,168,1.574,169,1.574,170,1.574,171,1.574,172,0.893,173,1.574,174,1.574,175,1.574,176,1.257,177,1.306,178,0.732,179,0.387,180,1.574,181,0.52,182,0.916,183,0.916,184,0.732,185,0.916,186,0.916,187,0.52,188,0.916,189,0.732,190,0.769,191,0.916,192,0.52,193,0.52,194,0.181,195,0.447,196,2.469,197,0.732,198,0.916,199,0.732,200,0.732,201,0.916,202,0.893,203,0.893,204,0.61,205,0.732,206,0.52,207,0.916,208,2.099,209,2.456,210,2.069,211,0.916,212,2.069,213,0.916,214,1.574,215,1.864,216,3.02,217,2.582,218,0.916,219,2.069,220,2.069,221,1.574,222,0.916,223,0.916,224,0.916,225,0.916,226,0.916,227,0.732,228,0.61,229,0.916,230,0.916,231,0.61,232,0.916,233,0.916,234,1.574,235,0.61,236,0.916,237,0.916,238,0.916,239,0.916,240,0.916,241,0.916,242,0.916,243,0.916,244,0.916,245,0.916,246,1.574,247,1.574,248,0.916,249,0.916,250,0.01,251,0.01,252,0.01,253,0.01]],["title/interfaces/Authentication.html",[155,1.502,254,0.356]],["body/interfaces/Authentication.html",[3,0.729,4,0.729,5,0.608,7,0.729,11,1.557,13,0.729,14,1.407,33,1.113,43,0.056,45,0.598,52,0.729,57,1.407,65,2.959,95,0.039,127,0.039,155,2.519,156,3.953,194,0.729,203,2.807,250,0.039,251,0.039,252,0.039,253,0.039,254,0.496,255,1.349,256,2.944,257,3.686,258,3.808]],["title/interfaces/CookieConfig.html",[254,0.356,259,1.502]],["body/interfaces/CookieConfig.html",[3,0.699,4,0.699,5,0.583,7,0.699,9,1.727,10,1.295,13,0.699,14,1.372,33,1.094,39,1.586,43,0.056,45,0.583,51,1.727,55,2.006,56,1.83,57,1.483,74,1.12,95,0.037,96,2.886,105,3.46,127,0.037,190,1.727,194,0.699,202,2.768,204,3.251,250,0.037,251,0.037,252,0.037,253,0.037,254,0.476,255,1.295,258,3.74,259,2.457,260,2.825,261,3.46,262,4.331,263,4.331]],["title/interfaces/File.html",[254,0.356,264,1.502]],["body/interfaces/File.html",[3,0.537,4,0.537,5,0.448,7,0.537,13,0.537,14,1.157,33,1.264,43,0.057,44,1.543,45,0.695,52,0.873,59,2.506,68,2.318,72,2.072,74,1.157,95,0.029,127,0.029,194,0.537,250,0.029,251,0.029,252,0.029,253,0.029,254,0.365,255,0.994,264,2.072,265,2.168,266,3.298,267,4.417,268,4.417,269,4.748,270,4.417,271,4.417,272,4.417,273,4.748,274,4.417,275,4.417,276,3.528,277,3.653,278,3.653,279,3.653,280,3.653,281,3.653]],["title/injectables/HttpService.html",[0,0.839,282,1.293]],["body/injectables/HttpService.html",[0,0.619,2,0.672,3,0.234,4,0.234,5,0.195,7,0.843,8,1.302,10,0.715,13,0.234,14,0.619,15,1.643,16,2.431,17,0.954,18,2.82,31,1.415,32,0.946,33,1.189,35,1.643,36,2.755,38,2.082,39,1.561,42,2.213,43,0.057,44,1.764,45,0.666,46,1.529,48,1.929,49,2.313,52,1.004,54,1.561,56,0.826,60,3.286,66,1.109,68,1.414,73,1.957,74,0.917,75,1.988,76,2.893,83,1.109,95,0.012,111,2.782,122,2.755,127,0.012,138,2.755,147,2.894,150,2.313,163,1.561,172,1.109,177,1.06,178,0.946,179,0.5,181,0.672,187,0.672,192,0.672,193,0.672,194,0.234,195,0.578,196,2.711,197,0.946,199,0.946,200,0.946,208,2.164,215,2.039,250,0.012,251,0.012,252,0.012,253,0.012,264,0.672,266,1.561,282,0.954,283,0.946,284,3.047,285,1.561,286,1.954,287,1.954,288,1.954,289,1.954,290,1.954,291,1.954,292,1.954,293,1.954,294,1.954,295,1.954,296,1.954,297,1.561,298,1.561,299,3.732,300,1.184,301,1.954,302,4.265,303,4.265,304,4.265,305,4.414,306,3.449,307,1.561,308,3.817,309,1.184,310,1.954,311,2.896,312,1.561,313,1.184,314,1.954,315,2.896,316,3.449,317,3.449,318,3.449,319,1.561,320,1.184,321,1.954,322,1.954,323,1.954,324,1.184,325,1.954,326,1.954,327,1.954,328,1.954,329,1.954,330,1.561,331,1.184,332,1.561,333,1.184,334,3.449,335,1.561,336,1.184,337,1.561,338,1.954,339,1.954,340,1.954,341,1.561,342,1.184,343,1.954,344,1.954,345,1.561,346,2.559,347,1.184,348,1.954,349,1.184,350,1.184,351,1.184,352,1.184,353,1.184,354,1.184,355,1.184,356,1.184,357,1.184,358,1.184,359,1.184]],["title/injectables/JwtService.html",[0,0.839,37,1.502]],["body/injectables/JwtService.html",[0,0.721,2,0.81,3,0.282,4,0.282,5,0.236,7,0.78,9,1.111,10,0.833,13,0.282,15,2.654,17,1.111,18,1.608,31,2.003,33,1.146,37,1.291,38,1.926,39,1.444,42,1.837,43,0.058,44,1.589,45,0.506,46,1.377,52,0.81,57,1.591,68,1.111,70,1.817,73,2.003,74,0.721,75,1.837,83,1.834,93,2.506,95,0.015,123,2.583,124,2.583,126,3.005,127,0.015,129,2.154,137,2.583,177,0.523,179,0.603,192,0.81,193,0.81,194,0.282,195,0.697,196,2.238,203,0.81,208,2.003,215,2.157,217,2.82,227,1.141,228,0.952,231,0.952,235,2.352,250,0.024,251,0.015,252,0.015,253,0.015,276,2.583,360,1.141,361,2.275,362,2.275,363,2.275,364,2.275,365,2.275,366,2.275,367,2.275,368,1.429,369,2.275,370,1.429,371,3.761,372,3.761,373,3.945,374,2.275,375,1.429,376,2.275,377,2.835,378,2.275,379,1.429,380,2.275,381,3.233,382,2.275,383,1.429,384,2.275,385,3.761,386,3.372,387,2.275,388,3.945,389,2.835,390,1.429,391,3.233,392,3.233,393,2.275,394,2.275,395,2.275,396,1.429,397,1.429,398,3.761,399,1.429,400,1.429,401,1.429,402,3.761,403,1.429,404,1.429,405,1.429,406,1.429,407,2.275,408,1.429,409,1.429,410,1.817,411,3.233,412,1.429,413,1.429,414,1.429,415,1.429,416,1.429,417,1.429,418,1.429,419,1.429,420,1.429,421,1.429,422,1.429,423,1.429,424,1.429,425,1.429,426,1.429,427,3.761,428,1.429,429,1.429,430,1.429,431,1.429,432,1.429,433,3.531,434,2.835,435,2.835,436,2.835,437,1.429,438,1.429,439,1.429,440,1.429,441,1.429,442,1.429,443,1.141,444,1.429,445,1.429,446,1.429,447,1.429,448,1.429,449,1.429,450,1.429,451,1.817,452,1.429,453,1.429,454,1.429,455,1.429,456,1.429,457,2.275,458,1.429,459,3.233,460,3.233,461,3.761,462,1.429,463,1.141,464,3.233,465,1.429,466,2.275,467,1.817,468,1.429,469,1.429,470,1.429,471,2.275,472,1.429,473,1.429,474,2.275,475,1.429,476,1.429,477,1.429,478,1.429,479,1.429,480,1.429,481,1.429,482,1.141,483,1.429,484,1.429,485,1.429]],["title/interfaces/LocalStorageConfig.html",[254,0.356,486,1.502]],["body/interfaces/LocalStorageConfig.html",[3,0.749,4,0.749,5,0.624,7,0.749,13,0.749,14,1.43,33,1.126,43,0.055,45,0.51,51,1.848,52,0.892,74,1.199,95,0.04,127,0.04,176,3.605,194,0.749,202,2.832,206,2.147,250,0.04,251,0.04,252,0.04,253,0.04,254,0.51,255,1.386,261,3.605,486,2.56,487,3.024]],["title/modules/NgStrapiModule.html",[488,2.115,489,1.502]],["body/modules/NgStrapiModule.html",[3,0.622,4,0.622,5,0.519,16,2.958,17,1.537,18,1.785,33,1.037,34,2.486,38,1.537,39,1.152,42,1.537,43,0.057,44,1.33,45,0.424,46,1.152,73,1.785,75,1.537,95,0.033,127,0.033,177,1.771,179,1.33,181,1.785,184,2.514,194,0.622,195,1.537,215,1.537,228,2.097,250,0.033,251,0.033,252,0.033,253,0.033,282,1.966,489,2.518,490,2.514,491,4.026,492,3.147,493,4.026,494,3.147,495,4.026,496,3.147,497,4.439,498,3.546,499,2.284,500,3.147,501,3.147,502,3.147,503,4.026,504,4.026,505,3.216,506,2.514,507,4.439,508,3.147,509,4.026,510,3.147,511,3.147]],["title/interfaces/ProviderToken.html",[61,1.293,254,0.356]],["body/interfaces/ProviderToken.html",[3,0.666,4,0.666,5,0.555,7,0.666,11,1.775,13,0.666,14,1.331,33,1.216,43,0.056,45,0.616,46,1.843,51,1.644,52,0.948,57,1.451,61,2.051,66,2.383,72,2.598,74,1.331,93,3.353,95,0.035,127,0.035,161,3.831,194,0.666,250,0.035,251,0.035,252,0.035,253,0.035,254,0.453,255,1.233,512,2.689,513,4.795,514,4.795,515,3.356]],["title/interfaces/StoreConfig.html",[34,1.293,254,0.356]],["body/interfaces/StoreConfig.html",[3,0.653,4,0.653,5,0.545,7,0.653,9,2.446,13,0.653,14,1.315,34,2.027,43,0.057,45,0.559,46,1.744,51,2.446,55,2.355,56,1.754,57,1.315,95,0.035,127,0.035,177,1.52,190,2.446,194,0.653,206,2.841,231,2.766,250,0.035,251,0.035,252,0.035,253,0.035,254,0.445,255,1.209,259,2.784,486,2.784,516,2.638,517,4.763]],["title/interceptors/TokenInterceptorService.html",[499,1.502,518,2.115]],["body/interceptors/TokenInterceptorService.html",[0,1.148,1,2.147,3,0.53,4,0.53,5,0.442,7,0.812,8,2.415,9,1.77,10,1.732,11,1.857,13,0.53,17,1.77,31,2.329,35,2.056,38,1.77,39,1.327,42,1.77,43,0.057,44,1.531,45,0.488,46,1.327,52,0.936,56,1.531,57,1.148,75,1.31,76,2.329,95,0.028,127,0.028,172,2.056,177,1.61,179,1.133,181,1.522,187,1.522,192,1.522,193,1.522,194,0.53,195,1.31,196,2.329,208,1.522,215,1.31,250,0.028,251,0.028,252,0.028,253,0.028,297,2.895,463,3.512,499,2.056,519,2.683,520,3.279,521,2.143,522,3.624,523,3.624,524,3.624,525,3.624,526,3.624,527,2.683,528,2.683,529,3.279,530,3.624,531,4.396,532,4.396,533,2.683,534,3.624,535,4.92,536,4.105,537,3.624,538,3.624,539,3.624,540,3.624,541,2.683,542,3.624,543,2.683,544,2.683,545,2.143,546,3.624,547,2.683,548,2.683,549,2.683,550,2.683,551,2.683]],["title/coverage.html",[552,3.592]],["body/coverage.html",[0,1.467,1,1.684,5,0.569,6,2.755,10,1.263,34,1.684,37,1.957,43,0.056,45,0.464,52,0.682,61,1.684,95,0.036,127,0.036,155,1.957,235,2.298,250,0.036,251,0.036,252,0.036,253,0.036,254,0.682,256,2.755,259,1.957,260,2.755,264,1.957,265,2.755,282,1.684,283,2.755,360,2.755,467,2.755,486,1.957,487,2.755,499,1.957,512,2.755,516,2.755,518,2.755,520,2.755,521,2.755,553,3.45,554,3.45,555,3.45,556,3.45,557,5.26,558,4.837,559,3.45,560,3.45,561,3.45,562,3.45,563,3.45,564,3.45,565,3.45]],["title/dependencies.html",[566,2.221,567,2.539]],["body/dependencies.html",[43,0.055,95,0.042,127,0.042,179,1.691,187,2.27,189,3.197,190,1.954,250,0.042,251,0.042,252,0.042,253,0.042,568,4.002,569,4.002,570,4.002,571,4.002,572,4.663,573,4.002,574,4.002]],["title/index.html",[575,1.774,576,1.774,577,2.221]],["body/index.html",[1,1.266,10,1.477,11,1.831,15,1.471,22,2.071,25,2.071,27,2.071,33,1.23,35,1.471,39,1.297,43,0.056,48,2.688,52,0.857,55,1.471,56,1.704,57,1.122,58,2.071,59,2.009,60,3.121,61,1.266,64,2.071,65,2.36,66,1.471,68,1.97,72,2.009,74,0.822,76,2.91,80,2.071,83,1.471,87,2.829,88,2.071,95,0.027,96,1.728,111,2.36,114,2.071,127,0.027,129,2.36,130,2.071,131,2.829,136,2.071,143,2.071,147,2.36,158,2.071,159,2.071,172,1.471,177,1.297,190,1.266,202,2.009,203,2.009,204,1.728,205,2.071,206,2.009,250,0.027,251,0.027,252,0.027,253,0.027,282,1.729,284,2.071,285,3.222,298,2.071,299,3.742,307,2.071,308,3.222,312,2.071,319,2.071,330,2.071,332,2.071,335,2.071,337,2.071,341,2.071,345,2.071,346,2.071,386,2.071,489,2.009,498,2.071,506,2.071,515,2.829,529,2.071,545,2.071,578,2.593,579,2.593,580,2.593,581,2.593,582,4.034,583,2.593,584,2.593,585,2.593,586,2.593,587,2.593,588,2.593,589,3.542,590,2.593,591,2.593,592,2.593,593,2.593,594,2.593,595,2.593,596,2.593,597,2.593,598,2.593,599,2.593,600,2.593,601,2.593,602,2.593,603,2.593,604,2.593,605,2.593,606,2.593,607,2.593,608,2.593,609,2.593,610,2.593,611,2.593,612,2.593]],["title/license.html",[575,1.774,576,1.774,613,1.774]],["body/license.html",[43,0.043,95,0.034,127,0.034,250,0.034,251,0.034,252,0.034,253,0.034,443,2.62,613,2.62,614,3.28,615,4.525,616,3.28,617,3.28,618,3.28,619,4.133,620,3.28,621,3.28,622,3.28,623,3.28,624,3.28,625,3.28,626,4.133,627,5.181,628,3.28,629,3.28,630,3.28,631,3.28,632,4.525,633,3.28,634,4.133,635,3.28,636,3.28,637,4.133,638,3.28,639,3.28,640,3.28,641,3.28,642,3.28,643,3.28,644,3.28,645,4.133,646,3.28,647,3.28,648,3.28,649,3.28,650,3.28,651,3.28,652,3.28,653,4.133,654,4.133,655,3.28,656,3.28,657,3.28,658,3.28,659,3.28,660,3.28,661,3.28,662,3.28,663,3.28,664,3.28,665,3.28,666,3.28,667,3.28,668,3.28,669,3.28,670,3.28,671,3.28,672,3.28,673,3.28,674,3.28,675,3.28,676,3.28,677,3.28,678,3.28,679,3.28,680,3.28,681,3.28,682,3.28,683,3.28,684,3.28,685,3.28]],["title/modules.html",[686,3.592]],["body/modules.html",[43,0.05,95,0.043,127,0.05,250,0.043,251,0.043,252,0.043,253,0.043,489,2.337,490,3.291,687,4.12,688,4.12,689,4.12]],["title/overview.html",[690,3.592]],["body/overview.html",[2,2.257,7,0.787,43,0.049,95,0.042,98,3.179,127,0.042,250,0.042,251,0.042,252,0.042,253,0.042,255,1.457,410,3.179,451,3.179,482,3.179,488,3.179,505,3.179,567,3.179,691,3.979,692,3.979,693,3.979,694,3.979,695,3.979,696,3.979,697,3.979,698,3.979]],["title/miscellaneous/typealiases.html",[699,2.221,700,3.178]],["body/miscellaneous/typealiases.html",[11,1.676,13,0.785,43,0.054,45,0.534,52,0.918,59,2.632,95,0.042,118,3.17,119,3.17,127,0.042,250,0.042,251,0.042,252,0.042,253,0.042,701,3.968,702,3.968,703,3.968,704,3.968,705,3.968,706,3.968,707,3.968]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":398,"title":{},"body":{"injectables/JwtService.html":{}}}],["00",{"_index":444,"title":{},"body":{"injectables/JwtService.html":{}}}],["1",{"_index":451,"title":{},"body":{"injectables/JwtService.html":{},"overview.html":{}}}],["100",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":401,"title":{},"body":{"injectables/JwtService.html":{}}}],["12/12",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["15/15",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":436,"title":{},"body":{"injectables/JwtService.html":{}}}],["2.2.0",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":616,"title":{},"body":{"license.html":{}}}],["3",{"_index":410,"title":{},"body":{"injectables/JwtService.html":{},"overview.html":{}}}],["3/3",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":433,"title":{},"body":{"injectables/JwtService.html":{}}}],["4/4",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":482,"title":{},"body":{"injectables/JwtService.html":{},"overview.html":{}}}],["6.4.0",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["63",{"_index":484,"title":{},"body":{"injectables/JwtService.html":{}}}],["64",{"_index":473,"title":{},"body":{"injectables/JwtService.html":{}}}],["8",{"_index":478,"title":{},"body":{"injectables/JwtService.html":{}}}],["8.2.5",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":448,"title":{},"body":{"injectables/JwtService.html":{}}}],["above",{"_index":652,"title":{},"body":{"license.html":{}}}],["acceso",{"_index":515,"title":{},"body":{"interfaces/ProviderToken.html":{},"index.html":{}}}],["access_token",{"_index":513,"title":{},"body":{"interfaces/ProviderToken.html":{}}}],["action",{"_index":678,"title":{},"body":{"license.html":{}}}],["actual",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{}}}],["actualización",{"_index":281,"title":{},"body":{"interfaces/File.html":{}}}],["actualizar",{"_index":343,"title":{},"body":{"injectables/HttpService.html":{}}}],["add",{"_index":470,"title":{},"body":{"injectables/JwtService.html":{}}}],["adrián",{"_index":617,"title":{},"body":{"license.html":{}}}],["ahora",{"_index":605,"title":{},"body":{"index.html":{}}}],["al",{"_index":64,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["alejar",{"_index":697,"title":{},"body":{"overview.html":{}}}],["alias",{"_index":702,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["almacenamiento",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LocalStorageConfig.html":{}}}],["almacenar",{"_index":55,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"interfaces/StoreConfig.html":{},"index.html":{}}}],["almacenara",{"_index":262,"title":{},"body":{"interfaces/CookieConfig.html":{}}}],["ampliar",{"_index":696,"title":{},"body":{"overview.html":{}}}],["and/or",{"_index":643,"title":{},"body":{"license.html":{}}}],["angular",{"_index":54,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["angular/common",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["angular/core",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["api",{"_index":285,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["aplicación",{"_index":600,"title":{},"body":{"index.html":{}}}],["appear",{"_index":415,"title":{},"body":{"injectables/JwtService.html":{}}}],["aqu",{"_index":608,"title":{},"body":{"index.html":{}}}],["archivo",{"_index":266,"title":{},"body":{"interfaces/File.html":{},"injectables/HttpService.html":{}}}],["archivos",{"_index":334,"title":{},"body":{"injectables/HttpService.html":{}}}],["arising",{"_index":682,"title":{},"body":{"license.html":{}}}],["array",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["array.prototype.map",{"_index":441,"title":{},"body":{"injectables/JwtService.html":{}}}],["ascii",{"_index":471,"title":{},"body":{"injectables/JwtService.html":{}}}],["associated",{"_index":628,"title":{},"body":{"license.html":{}}}],["atob",{"_index":453,"title":{},"body":{"injectables/JwtService.html":{}}}],["autenticación",{"_index":11,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/ProviderToken.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["autenticado",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["autentique",{"_index":63,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth",{"_index":529,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["auth.service",{"_index":543,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["authenticateprovider",{"_index":19,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticateprovider(provider",{"_index":58,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["authentication",{"_index":155,"title":{"interfaces/Authentication.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"coverage.html":{}}}],["authorization",{"_index":549,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["authors",{"_index":671,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":1,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"index.html":{}}}],["authservicestrapi",{"_index":590,"title":{},"body":{"index.html":{}}}],["autorizado",{"_index":598,"title":{},"body":{"index.html":{}}}],["b64decode",{"_index":362,"title":{},"body":{"injectables/JwtService.html":{}}}],["b64decode(str",{"_index":369,"title":{},"body":{"injectables/JwtService.html":{}}}],["b64decodeunicode",{"_index":363,"title":{},"body":{"injectables/JwtService.html":{}}}],["b64decodeunicode(str",{"_index":374,"title":{},"body":{"injectables/JwtService.html":{}}}],["base64",{"_index":372,"title":{},"body":{"injectables/JwtService.html":{}}}],["base64url",{"_index":439,"title":{},"body":{"injectables/JwtService.html":{}}}],["baseurl",{"_index":16,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"modules/NgStrapiModule.html":{}}}],["bc",{"_index":459,"title":{},"body":{"injectables/JwtService.html":{}}}],["bearer",{"_index":550,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["bit",{"_index":468,"title":{},"body":{"injectables/JwtService.html":{}}}],["bits",{"_index":479,"title":{},"body":{"injectables/JwtService.html":{}}}],["boolean",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"index.html":{}}}],["bootstrap",{"_index":694,"title":{},"body":{"overview.html":{}}}],["borrar",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{}}}],["break",{"_index":435,"title":{},"body":{"injectables/JwtService.html":{}}}],["bs",{"_index":460,"title":{},"body":{"injectables/JwtService.html":{}}}],["buffer",{"_index":461,"title":{},"body":{"injectables/JwtService.html":{}}}],["buscar",{"_index":337,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["c",{"_index":443,"title":{},"body":{"injectables/JwtService.html":{},"license.html":{}}}],["c.charcodeat(0).tostring(16)).slice",{"_index":445,"title":{},"body":{"injectables/JwtService.html":{}}}],["cadena",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{}}}],["call(this.b64decode(str",{"_index":442,"title":{},"body":{"injectables/JwtService.html":{}}}],["campos",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["case",{"_index":434,"title":{},"body":{"injectables/JwtService.html":{}}}],["catch",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["cerr",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["cerrar",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["character",{"_index":464,"title":{},"body":{"injectables/JwtService.html":{}}}],["characters",{"_index":476,"title":{},"body":{"injectables/JwtService.html":{}}}],["charge",{"_index":623,"title":{},"body":{"license.html":{}}}],["chars",{"_index":447,"title":{},"body":{"injectables/JwtService.html":{}}}],["chars.indexof(buffer",{"_index":485,"title":{},"body":{"injectables/JwtService.html":{}}}],["check",{"_index":416,"title":{},"body":{"injectables/JwtService.html":{}}}],["claim",{"_index":674,"title":{},"body":{"license.html":{}}}],["class",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["clave",{"_index":340,"title":{},"body":{"injectables/HttpService.html":{}}}],["cleartoken",{"_index":20,"title":{},"body":{"injectables/AuthService.html":{}}}],["cobertura",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["code",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ProviderToken.html":{}}}],["coincidan",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["comesfromstorage",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["como",{"_index":537,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["compensados",{"_index":394,"title":{},"body":{"injectables/JwtService.html":{}}}],["complete",{"_index":601,"title":{},"body":{"index.html":{}}}],["con",{"_index":66,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"interfaces/ProviderToken.html":{},"index.html":{}}}],["concordar",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["conditions",{"_index":651,"title":{},"body":{"license.html":{}}}],["conexión",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["config",{"_index":508,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["configuración",{"_index":51,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{}}}],["confirmación",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["connection",{"_index":684,"title":{},"body":{"license.html":{}}}],["const",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["constructor(@inject('baseurl",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["constructor(auth",{"_index":527,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["constructor(baseurl",{"_index":32,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["constructor(private",{"_index":545,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["consultas",{"_index":318,"title":{},"body":{"injectables/HttpService.html":{}}}],["contenido",{"_index":303,"title":{},"body":{"injectables/HttpService.html":{}}}],["contenttypepluralized",{"_index":302,"title":{},"body":{"injectables/HttpService.html":{}}}],["contiene",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{}}}],["contract",{"_index":679,"title":{},"body":{"license.html":{}}}],["contraseña",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["convert",{"_index":477,"title":{},"body":{"injectables/JwtService.html":{}}}],["cookie",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"interfaces/StoreConfig.html":{},"dependencies.html":{},"index.html":{}}}],["cookieconfig",{"_index":259,"title":{"interfaces/CookieConfig.html":{}},"body":{"interfaces/CookieConfig.html":{},"interfaces/StoreConfig.html":{},"coverage.html":{}}}],["cookies",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["cookies.get(this.storeconfig.cookie.key",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["cookies.remove",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["cookies.set",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["copies",{"_index":645,"title":{},"body":{"license.html":{}}}],["copy",{"_index":626,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":615,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":455,"title":{},"body":{"injectables/JwtService.html":{}}}],["correo",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{}}}],["counters",{"_index":458,"title":{},"body":{"injectables/JwtService.html":{}}}],["coverage",{"_index":552,"title":{"coverage.html":{}},"body":{}}],["creación",{"_index":277,"title":{},"body":{"interfaces/File.html":{}}}],["crear",{"_index":301,"title":{},"body":{"injectables/HttpService.html":{}}}],["createdat",{"_index":267,"title":{},"body":{"interfaces/File.html":{}}}],["createentry",{"_index":286,"title":{},"body":{"injectables/HttpService.html":{}}}],["createentry(contenttypepluralized",{"_index":298,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["criterios",{"_index":328,"title":{},"body":{"injectables/HttpService.html":{}}}],["código",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/ProviderToken.html":{}}}],["damages",{"_index":675,"title":{},"body":{"license.html":{}}}],["data",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["date",{"_index":385,"title":{},"body":{"injectables/JwtService.html":{}}}],["date().valueof",{"_index":400,"title":{},"body":{"injectables/JwtService.html":{}}}],["date(0",{"_index":405,"title":{},"body":{"injectables/JwtService.html":{}}}],["date.setutcseconds(decoded.exp",{"_index":406,"title":{},"body":{"injectables/JwtService.html":{}}}],["date.valueof",{"_index":399,"title":{},"body":{"injectables/JwtService.html":{}}}],["datos",{"_index":284,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["de",{"_index":52,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["deal",{"_index":631,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":685,"title":{},"body":{"license.html":{}}}],["declaraciones",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["declarations",{"_index":693,"title":{},"body":{"overview.html":{}}}],["decode",{"_index":425,"title":{},"body":{"injectables/JwtService.html":{}}}],["decoded",{"_index":402,"title":{},"body":{"injectables/JwtService.html":{}}}],["decoded.hasownproperty('exp",{"_index":404,"title":{},"body":{"injectables/JwtService.html":{}}}],["decodetoken",{"_index":364,"title":{},"body":{"injectables/JwtService.html":{}}}],["decodetoken(token",{"_index":378,"title":{},"body":{"injectables/JwtService.html":{}}}],["decodeuricomponent",{"_index":377,"title":{},"body":{"injectables/JwtService.html":{}}}],["decodificación",{"_index":371,"title":{},"body":{"injectables/JwtService.html":{}}}],["decodificar",{"_index":380,"title":{},"body":{"injectables/JwtService.html":{}}}],["default",{"_index":437,"title":{},"body":{"injectables/JwtService.html":{}}}],["defecto",{"_index":297,"title":{},"body":{"injectables/HttpService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["definido",{"_index":38,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["del",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"index.html":{}}}],["deleteentry",{"_index":287,"title":{},"body":{"injectables/HttpService.html":{}}}],["deleteentry(contenttypepluralized",{"_index":307,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["dependencias",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["dependencies",{"_index":567,"title":{"dependencies.html":{}},"body":{"overview.html":{}}}],["descripción",{"_index":7,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"overview.html":{}}}],["devuelve",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["disponible",{"_index":688,"title":{},"body":{"modules.html":{}}}],["distribute",{"_index":641,"title":{},"body":{"license.html":{}}}],["documentación",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["documentation",{"_index":629,"title":{},"body":{"license.html":{}}}],["doesn\\'t",{"_index":414,"title":{},"body":{"injectables/JwtService.html":{}}}],["domain.com/rest",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{}}}],["donde",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{}}}],["e",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["each",{"_index":475,"title":{},"body":{"injectables/JwtService.html":{}}}],["ejemplo",{"_index":12,"title":{},"body":{"injectables/AuthService.html":{}}}],["el",{"_index":56,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"injectables/HttpService.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["electrónico",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["eliminar",{"_index":310,"title":{},"body":{"injectables/HttpService.html":{}}}],["email",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{}}}],["en",{"_index":39,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["encoded",{"_index":456,"title":{},"body":{"injectables/JwtService.html":{}}}],["enlace",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["entrada",{"_index":305,"title":{},"body":{"injectables/HttpService.html":{}}}],["entradas",{"_index":315,"title":{},"body":{"injectables/HttpService.html":{}}}],["entre",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["enviado",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{}}}],["enviar",{"_index":525,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["enviara",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{}}}],["envía",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":452,"title":{},"body":{"injectables/JwtService.html":{}}}],["error('cannot",{"_index":424,"title":{},"body":{"injectables/JwtService.html":{}}}],["error('the",{"_index":412,"title":{},"body":{"injectables/JwtService.html":{}}}],["es",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["específica",{"_index":322,"title":{},"body":{"injectables/HttpService.html":{}}}],["este",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{}}}],["etc",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["event",{"_index":670,"title":{},"body":{"license.html":{}}}],["existingtoken",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiración",{"_index":384,"title":{},"body":{"injectables/JwtService.html":{}}}],["expirado",{"_index":392,"title":{},"body":{"injectables/JwtService.html":{}}}],["export",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{}}}],["exports",{"_index":695,"title":{},"body":{"overview.html":{}}}],["express",{"_index":661,"title":{},"body":{"license.html":{}}}],["ext",{"_index":268,"title":{},"body":{"interfaces/File.html":{}}}],["extensión",{"_index":278,"title":{},"body":{"interfaces/File.html":{}}}],["extienda",{"_index":50,"title":{},"body":{"injectables/AuthService.html":{}}}],["facebook",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["failed",{"_index":454,"title":{},"body":{"injectables/JwtService.html":{}}}],["false",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/StoreConfig.html":{}}}],["fecha",{"_index":276,"title":{},"body":{"interfaces/File.html":{},"injectables/JwtService.html":{}}}],["fichero",{"_index":5,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["file",{"_index":264,"title":{"interfaces/File.html":{}},"body":{"interfaces/File.html":{},"injectables/HttpService.html":{},"coverage.html":{}}}],["files",{"_index":630,"title":{},"body":{"license.html":{}}}],["filtrar",{"_index":316,"title":{},"body":{"injectables/HttpService.html":{}}}],["find",{"_index":483,"title":{},"body":{"injectables/JwtService.html":{}}}],["first",{"_index":474,"title":{},"body":{"injectables/JwtService.html":{}}}],["fitness",{"_index":666,"title":{},"body":{"license.html":{}}}],["following",{"_index":650,"title":{},"body":{"license.html":{}}}],["forgotpassword",{"_index":21,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(email",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["formato",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{}}}],["formdata",{"_index":346,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["forroot",{"_index":494,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["forroot(baseurl",{"_index":495,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["found",{"_index":466,"title":{},"body":{"injectables/JwtService.html":{}}}],["free",{"_index":622,"title":{},"body":{"license.html":{}}}],["furnished",{"_index":648,"title":{},"body":{"license.html":{}}}],["g",{"_index":429,"title":{},"body":{"injectables/JwtService.html":{}}}],["general",{"_index":691,"title":{},"body":{"overview.html":{}}}],["getcurrentuser",{"_index":22,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["getentries",{"_index":288,"title":{},"body":{"injectables/HttpService.html":{}}}],["getentries(contenttypepluralized",{"_index":312,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["getentry",{"_index":289,"title":{},"body":{"injectables/HttpService.html":{}}}],["getentry(contenttypepluralized",{"_index":319,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["getentrycount",{"_index":290,"title":{},"body":{"injectables/HttpService.html":{}}}],["getentrycount(contenttype",{"_index":612,"title":{},"body":{"index.html":{}}}],["getentrycount(contenttypepluralized",{"_index":323,"title":{},"body":{"injectables/HttpService.html":{}}}],["getfile",{"_index":291,"title":{},"body":{"injectables/HttpService.html":{}}}],["getfile(id",{"_index":330,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["getfiles",{"_index":292,"title":{},"body":{"injectables/HttpService.html":{}}}],["getfiles(params",{"_index":332,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["getproviderauthenticationurl",{"_index":23,"title":{},"body":{"injectables/AuthService.html":{}}}],["getproviderauthenticationurl(provider",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["getting",{"_index":575,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":24,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokenexpirationdate",{"_index":365,"title":{},"body":{"injectables/JwtService.html":{}}}],["gettokenexpirationdate(token",{"_index":382,"title":{},"body":{"injectables/JwtService.html":{}}}],["github",{"_index":707,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["google",{"_index":706,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["granted",{"_index":621,"title":{},"body":{"license.html":{}}}],["gráfica",{"_index":687,"title":{},"body":{"modules.html":{}}}],["guardar",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["ha",{"_index":391,"title":{},"body":{"injectables/JwtService.html":{}}}],["hash",{"_index":269,"title":{},"body":{"interfaces/File.html":{}}}],["hay",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["headers",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers.append('access_token",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers.append('code",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers.append('oauth_token",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["hereby",{"_index":620,"title":{},"body":{"license.html":{}}}],["holders",{"_index":672,"title":{},"body":{"license.html":{}}}],["host",{"_index":49,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["http",{"_index":35,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["http://localhost:1337",{"_index":587,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":504,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["httpclient",{"_index":36,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["httpclientmodule",{"_index":503,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["httpevent",{"_index":541,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httphandler",{"_index":532,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httpheaders",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpinterceptor",{"_index":542,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httpparams",{"_index":299,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["httprequest",{"_index":531,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["https://jwt.io",{"_index":421,"title":{},"body":{"injectables/JwtService.html":{}}}],["https://my",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpservice",{"_index":282,"title":{"injectables/HttpService.html":{}},"body":{"injectables/HttpService.html":{},"modules/NgStrapiModule.html":{},"coverage.html":{},"index.html":{}}}],["id",{"_index":308,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["identificador",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["identifier",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["idx",{"_index":462,"title":{},"body":{"injectables/JwtService.html":{}}}],["illegal",{"_index":438,"title":{},"body":{"injectables/JwtService.html":{}}}],["implements",{"_index":544,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["implied",{"_index":662,"title":{},"body":{"license.html":{}}}],["import",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["importar",{"_index":584,"title":{},"body":{"index.html":{}}}],["imports",{"_index":506,"title":{},"body":{"modules/NgStrapiModule.html":{},"index.html":{}}}],["included",{"_index":655,"title":{},"body":{"license.html":{}}}],["including",{"_index":634,"title":{},"body":{"license.html":{}}}],["index",{"_index":577,"title":{"index.html":{}},"body":{}}],["info",{"_index":3,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{}}}],["inicie",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["inicio",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["initialize",{"_index":457,"title":{},"body":{"injectables/JwtService.html":{}}}],["inject",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["inject('config",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["inspected",{"_index":413,"title":{},"body":{"injectables/JwtService.html":{}}}],["instalar",{"_index":579,"title":{},"body":{"index.html":{}}}],["install",{"_index":581,"title":{},"body":{"index.html":{}}}],["intercepción",{"_index":534,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercept",{"_index":526,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercept(request",{"_index":530,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptada",{"_index":540,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptar",{"_index":522,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor",{"_index":518,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":501,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["interceptor.service.ts",{"_index":521,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:12",{"_index":528,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:26",{"_index":533,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptores",{"_index":519,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interface",{"_index":254,"title":{"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{}},"body":{"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":255,"title":{},"body":{"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"overview.html":{}}}],["interfaz",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["inyectables",{"_index":2,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"overview.html":{}}}],["isauthenticated",{"_index":25,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["istokenexpired",{"_index":366,"title":{},"body":{"injectables/JwtService.html":{}}}],["istokenexpired(token",{"_index":387,"title":{},"body":{"injectables/JwtService.html":{}}}],["join",{"_index":446,"title":{},"body":{"injectables/JwtService.html":{}}}],["js",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["json.parse(decoded",{"_index":426,"title":{},"body":{"injectables/JwtService.html":{}}}],["json.parse(window.localstorage.getitem",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(token",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"injectables/JwtService.html":{},"index.html":{}}}],["jwt.service",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtservice",{"_index":37,"title":{"injectables/JwtService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"coverage.html":{}}}],["key",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"interfaces/LocalStorageConfig.html":{},"index.html":{}}}],["kind",{"_index":660,"title":{},"body":{"license.html":{}}}],["la",{"_index":10,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"index.html":{}}}],["las",{"_index":523,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["legend",{"_index":692,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":676,"title":{},"body":{"license.html":{}}}],["liable",{"_index":673,"title":{},"body":{"license.html":{}}}],["license",{"_index":613,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":635,"title":{},"body":{"license.html":{}}}],["limited",{"_index":663,"title":{},"body":{"license.html":{}}}],["lista",{"_index":314,"title":{},"body":{"injectables/HttpService.html":{}}}],["llave",{"_index":261,"title":{},"body":{"interfaces/CookieConfig.html":{},"interfaces/LocalStorageConfig.html":{}}}],["local",{"_index":591,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/StoreConfig.html":{},"index.html":{}}}],["localstorageconfig",{"_index":486,"title":{"interfaces/LocalStorageConfig.html":{}},"body":{"interfaces/LocalStorageConfig.html":{},"interfaces/StoreConfig.html":{},"coverage.html":{}}}],["login",{"_index":26,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(identifier",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["logout",{"_index":27,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["los",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["make",{"_index":417,"title":{},"body":{"injectables/JwtService.html":{}}}],["matching",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["merchantability",{"_index":665,"title":{},"body":{"license.html":{}}}],["merge",{"_index":639,"title":{},"body":{"license.html":{}}}],["mime",{"_index":270,"title":{},"body":{"interfaces/File.html":{}}}],["miscellaneous",{"_index":699,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["miscelánea",{"_index":701,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["mit",{"_index":614,"title":{},"body":{"license.html":{}}}],["modelo",{"_index":257,"title":{},"body":{"interfaces/Authentication.html":{}}}],["models/authentication",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/file",{"_index":349,"title":{},"body":{"injectables/HttpService.html":{}}}],["models/provider",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/providertoken",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/storeconfig",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"modules/NgStrapiModule.html":{}}}],["modify",{"_index":638,"title":{},"body":{"license.html":{}}}],["module",{"_index":488,"title":{"modules/NgStrapiModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":686,"title":{"modules.html":{}},"body":{}}],["modulewithproviders",{"_index":497,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["modulo",{"_index":585,"title":{},"body":{"index.html":{}}}],["more",{"_index":422,"title":{},"body":{"injectables/JwtService.html":{}}}],["multi",{"_index":511,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["métodos",{"_index":17,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["módulo",{"_index":698,"title":{},"body":{"overview.html":{}}}],["módulos",{"_index":490,"title":{},"body":{"modules/NgStrapiModule.html":{},"modules.html":{}}}],["name",{"_index":271,"title":{},"body":{"interfaces/File.html":{}}}],["navegador",{"_index":69,"title":{},"body":{"injectables/AuthService.html":{}}}],["navegar",{"_index":689,"title":{},"body":{"modules.html":{}}}],["ndice",{"_index":13,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"coverage.html":{}}}],["next",{"_index":463,"title":{},"body":{"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["next.handle(request",{"_index":551,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["ng",{"_index":582,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":498,"title":{},"body":{"modules/NgStrapiModule.html":{},"index.html":{}}}],["ngstrapi",{"_index":578,"title":{},"body":{"index.html":{}}}],["ngstrapimodule",{"_index":489,"title":{"modules/NgStrapiModule.html":{}},"body":{"modules/NgStrapiModule.html":{},"index.html":{},"modules.html":{}}}],["ngstrapimodule.forroot",{"_index":586,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{}}}],["nombre",{"_index":44,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["noninfringement",{"_index":669,"title":{},"body":{"license.html":{}}}],["notice",{"_index":653,"title":{},"body":{"license.html":{}}}],["npm",{"_index":580,"title":{},"body":{"index.html":{}}}],["nueva",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["nuevo",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["nuevos",{"_index":344,"title":{},"body":{"injectables/HttpService.html":{}}}],["null",{"_index":386,"title":{},"body":{"injectables/JwtService.html":{},"index.html":{}}}],["number",{"_index":389,"title":{},"body":{"injectables/JwtService.html":{}}}],["o",{"_index":70,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{}}}],["oauth_token",{"_index":514,"title":{},"body":{"interfaces/ProviderToken.html":{}}}],["object",{"_index":258,"title":{},"body":{"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{}}}],["observable",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["observablehttp",{"_index":611,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":625,"title":{},"body":{"license.html":{}}}],["obtener",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["obtenga",{"_index":325,"title":{},"body":{"injectables/HttpService.html":{}}}],["obteniendo",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["obtén",{"_index":321,"title":{},"body":{"injectables/HttpService.html":{}}}],["offsetseconds",{"_index":388,"title":{},"body":{"injectables/JwtService.html":{}}}],["one",{"_index":480,"title":{},"body":{"injectables/JwtService.html":{}}}],["opcional",{"_index":46,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{}}}],["opciones",{"_index":263,"title":{},"body":{"interfaces/CookieConfig.html":{}}}],["options",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"index.html":{}}}],["ordenar",{"_index":317,"title":{},"body":{"injectables/HttpService.html":{}}}],["otherwise",{"_index":681,"title":{},"body":{"license.html":{}}}],["out",{"_index":683,"title":{},"body":{"license.html":{}}}],["output",{"_index":427,"title":{},"body":{"injectables/JwtService.html":{}}}],["output.length",{"_index":432,"title":{},"body":{"injectables/JwtService.html":{}}}],["overview",{"_index":690,"title":{"overview.html":{}},"body":{}}],["package",{"_index":566,"title":{"dependencies.html":{}},"body":{}}],["palabras",{"_index":339,"title":{},"body":{"injectables/HttpService.html":{}}}],["para",{"_index":9,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"injectables/JwtService.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{}}}],["param",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["parametro",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["parametros",{"_index":306,"title":{},"body":{"injectables/HttpService.html":{}}}],["params",{"_index":60,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["params.access_token",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["params.code",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["params.oauth_token",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["pares",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":667,"title":{},"body":{"license.html":{}}}],["parts",{"_index":407,"title":{},"body":{"injectables/JwtService.html":{}}}],["parts.length",{"_index":409,"title":{},"body":{"injectables/JwtService.html":{}}}],["parámetro",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["parámetros",{"_index":42,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["password",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["password);providers",{"_index":593,"title":{},"body":{"index.html":{}}}],["password?code=privatecode",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordconfirmation",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["path",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["perfil",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["permission",{"_index":619,"title":{},"body":{"license.html":{}}}],["permit",{"_index":646,"title":{},"body":{"license.html":{}}}],["person",{"_index":624,"title":{},"body":{"license.html":{}}}],["persons",{"_index":647,"title":{},"body":{"license.html":{}}}],["peticiones",{"_index":524,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["petición",{"_index":535,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["pluralizado",{"_index":304,"title":{},"body":{"injectables/HttpService.html":{}}}],["poder",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["por",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["portions",{"_index":657,"title":{},"body":{"license.html":{}}}],["predeterminado",{"_index":41,"title":{},"body":{"injectables/AuthService.html":{}}}],["presente",{"_index":67,"title":{},"body":{"injectables/AuthService.html":{}}}],["privadas",{"_index":606,"title":{},"body":{"index.html":{}}}],["private",{"_index":15,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"index.html":{}}}],["profile",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["propiedades",{"_index":14,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{}}}],["proporcionados",{"_index":329,"title":{},"body":{"injectables/HttpService.html":{}}}],["proveedor",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/File.html":{},"interfaces/ProviderToken.html":{},"index.html":{}}}],["proveedores",{"_index":705,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["provide",{"_index":507,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["provided",{"_index":658,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["provider",{"_index":59,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/File.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["providers",{"_index":505,"title":{},"body":{"modules/NgStrapiModule.html":{},"overview.html":{}}}],["providertoken",{"_index":61,"title":{"interfaces/ProviderToken.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ProviderToken.html":{},"coverage.html":{},"index.html":{}}}],["public",{"_index":18,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{}}}],["publish",{"_index":640,"title":{},"body":{"license.html":{}}}],["puede",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["purpose",{"_index":668,"title":{},"body":{"license.html":{}}}],["página",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["que",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["query",{"_index":338,"title":{},"body":{"injectables/HttpService.html":{}}}],["readonly",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["recibido",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["recomienda",{"_index":588,"title":{},"body":{"index.html":{}}}],["recordarlo",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["recuento",{"_index":326,"title":{},"body":{"injectables/HttpService.html":{}}}],["recuperado",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["recupere",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirigir",{"_index":599,"title":{},"body":{"index.html":{}}}],["redirija",{"_index":594,"title":{},"body":{"index.html":{}}}],["reestablecer",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{}}}],["register",{"_index":28,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(data",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["registra",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["registro",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["relacionados",{"_index":279,"title":{},"body":{"interfaces/File.html":{}}}],["related",{"_index":272,"title":{},"body":{"interfaces/File.html":{}}}],["replace(/_/g",{"_index":430,"title":{},"body":{"injectables/JwtService.html":{}}}],["request",{"_index":536,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["request.clone",{"_index":547,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["requiere",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword",{"_index":29,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(code",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["resolver",{"_index":538,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["restablecer",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["restablecimiento",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{}}}],["restriction",{"_index":633,"title":{},"body":{"license.html":{}}}],["result",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resultados",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["retorna",{"_index":539,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["return",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["returns",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["rights",{"_index":636,"title":{},"body":{"license.html":{}}}],["root",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["rxjs",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["saber",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{}}}],["sdk",{"_index":602,"title":{},"body":{"index.html":{}}}],["se",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"index.html":{}}}],["searchfiles",{"_index":293,"title":{},"body":{"injectables/HttpService.html":{}}}],["searchfiles(query",{"_index":335,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["see",{"_index":420,"title":{},"body":{"injectables/JwtService.html":{}}}],["segundos",{"_index":393,"title":{},"body":{"injectables/JwtService.html":{}}}],["sell",{"_index":644,"title":{},"body":{"license.html":{}}}],["ser",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{}}}],["sera",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{}}}],["services/http.service",{"_index":502,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["services/token",{"_index":500,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["servicio",{"_index":8,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["servicios",{"_index":53,"title":{},"body":{"injectables/AuthService.html":{}}}],["sesión",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["setheaders",{"_index":548,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["settoken",{"_index":30,"title":{},"body":{"injectables/AuthService.html":{}}}],["settoken(token",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["sha256",{"_index":273,"title":{},"body":{"interfaces/File.html":{}}}],["shall",{"_index":654,"title":{},"body":{"license.html":{}}}],["si",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{}}}],["size",{"_index":274,"title":{},"body":{"interfaces/File.html":{}}}],["software",{"_index":627,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{}}}],["src/.../provider.ts",{"_index":703,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/models/authentication.ts",{"_index":256,"title":{},"body":{"interfaces/Authentication.html":{},"coverage.html":{}}}],["src/lib/models/cookieconfig.ts",{"_index":260,"title":{},"body":{"interfaces/CookieConfig.html":{},"coverage.html":{}}}],["src/lib/models/file.ts",{"_index":265,"title":{},"body":{"interfaces/File.html":{},"coverage.html":{}}}],["src/lib/models/localstorageconfig.ts",{"_index":487,"title":{},"body":{"interfaces/LocalStorageConfig.html":{},"coverage.html":{}}}],["src/lib/models/provider.ts",{"_index":704,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/models/providertoken.ts",{"_index":512,"title":{},"body":{"interfaces/ProviderToken.html":{},"coverage.html":{}}}],["src/lib/models/storeconfig.ts",{"_index":516,"title":{},"body":{"interfaces/StoreConfig.html":{},"coverage.html":{}}}],["src/lib/ng",{"_index":491,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["src/lib/services/auth.service.ts",{"_index":6,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/lib/services/auth.service.ts:118",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:126",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:134",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:151",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:166",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:184",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:194",{"_index":62,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:218",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:239",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:26",{"_index":40,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:59",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:77",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:94",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/http.service.ts",{"_index":283,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/lib/services/http.service.ts:108",{"_index":336,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:117",{"_index":333,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:128",{"_index":331,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:137",{"_index":347,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:18",{"_index":296,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:35",{"_index":313,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:47",{"_index":324,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:59",{"_index":320,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:70",{"_index":300,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:87",{"_index":342,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:99",{"_index":309,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/jwt.service.ts",{"_index":360,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{}}}],["src/lib/services/jwt.service.ts:109",{"_index":375,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/jwt.service.ts:124",{"_index":370,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/jwt.service.ts:22",{"_index":390,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/jwt.service.ts:41",{"_index":383,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/jwt.service.ts:59",{"_index":379,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/jwt.service.ts:83",{"_index":396,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/jwt.service.ts:9",{"_index":368,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/token",{"_index":520,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["started",{"_index":576,"title":{"index.html":{},"license.html":{}},"body":{}}],["static",{"_index":493,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["storage",{"_index":469,"title":{},"body":{"injectables/JwtService.html":{}}}],["storeconfig",{"_index":34,"title":{"interfaces/StoreConfig.html":{}},"body":{"injectables/AuthService.html":{},"modules/NgStrapiModule.html":{},"interfaces/StoreConfig.html":{},"coverage.html":{}}}],["str",{"_index":373,"title":{},"body":{"injectables/JwtService.html":{}}}],["str.charat(idx",{"_index":465,"title":{},"body":{"injectables/JwtService.html":{}}}],["str.length",{"_index":450,"title":{},"body":{"injectables/JwtService.html":{}}}],["str.replace",{"_index":428,"title":{},"body":{"injectables/JwtService.html":{}}}],["strapi",{"_index":48,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["strapi.module.ts",{"_index":492,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["strapi.module.ts:15",{"_index":496,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["strapiimportar",{"_index":583,"title":{},"body":{"index.html":{}}}],["string",{"_index":33,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"index.html":{}}}],["string(str).replace",{"_index":449,"title":{},"body":{"injectables/JwtService.html":{}}}],["string.fromcharcode(255",{"_index":481,"title":{},"body":{"injectables/JwtService.html":{}}}],["su",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["subir",{"_index":348,"title":{},"body":{"injectables/HttpService.html":{}}}],["subject",{"_index":649,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":642,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":656,"title":{},"body":{"license.html":{}}}],["sure",{"_index":418,"title":{},"body":{"injectables/JwtService.html":{}}}],["sus",{"_index":610,"title":{},"body":{"index.html":{}}}],["switch",{"_index":431,"title":{},"body":{"injectables/JwtService.html":{}}}],["t",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["tabla",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["table",{"_index":467,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["tamaño",{"_index":280,"title":{},"body":{"interfaces/File.html":{}}}],["template",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["texto",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{}}}],["this.auth.authenticateprovider('facebook');datos",{"_index":604,"title":{},"body":{"index.html":{}}}],["this.auth.getproviderauthenticationurl('facebook');una",{"_index":596,"title":{},"body":{"index.html":{}}}],["this.auth.gettoken",{"_index":546,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["this.auth.login(username",{"_index":592,"title":{},"body":{"index.html":{}}}],["this.b64decodeunicode(output",{"_index":440,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.baseurl",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["this.baseurl}/connect/${provider",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cleartoken",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.decodetoken(token",{"_index":403,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.gettoken",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettokenexpirationdate(token",{"_index":397,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.http.delete(`${this.baseurl}/${contenttypepluralized}/${id",{"_index":355,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/${contenttypepluralized",{"_index":350,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/${contenttypepluralized}/${id",{"_index":352,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/${contenttypepluralized}/count",{"_index":351,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/auth/${provider}/callback",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${this.baseurl}/upload/files",{"_index":357,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/upload/files/${id",{"_index":358,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/upload/search/${decodeuricomponent(query",{"_index":356,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/users/me",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.getentries('users').subscribe(users",{"_index":607,"title":{},"body":{"index.html":{}}}],["this.http.post(`${this.baseurl}/${contenttypepluralized",{"_index":353,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.post(`${this.baseurl}/auth/local",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.baseurl}/auth/local/register",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.baseurl}/auth/reset",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.baseurl}/upload",{"_index":359,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.put(`${this.baseurl}/${contenttypepluralized}/${id",{"_index":354,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.jwtservice.istokenexpired(this.gettoken",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.settoken(jwt.jwt",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeconfig",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeconfig.cookie",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeconfig.cookie.key",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeconfig.cookie.options",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeconfig.localstorage",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeconfig.localstorage.key",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.urlbase64decode(parts[1",{"_index":423,"title":{},"body":{"injectables/JwtService.html":{}}}],["three",{"_index":419,"title":{},"body":{"injectables/JwtService.html":{}}}],["throw",{"_index":411,"title":{},"body":{"injectables/JwtService.html":{}}}],["tipo",{"_index":45,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["todos",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":57,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"injectables/JwtService.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["token.split",{"_index":408,"title":{},"body":{"injectables/JwtService.html":{}}}],["token.subscribe(jwt",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokeninterceptorservice",{"_index":499,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["tort",{"_index":680,"title":{},"body":{"license.html":{}}}],["total",{"_index":327,"title":{},"body":{"injectables/HttpService.html":{}}}],["tratado",{"_index":381,"title":{},"body":{"injectables/JwtService.html":{}}}],["tratamiento",{"_index":361,"title":{},"body":{"injectables/JwtService.html":{}}}],["trate",{"_index":609,"title":{},"body":{"index.html":{}}}],["true",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{}}}],["try",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{}}}],["tu",{"_index":47,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":700,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ub",{"_index":618,"title":{},"body":{"license.html":{}}}],["un",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"index.html":{}}}],["una",{"_index":311,"title":{},"body":{"injectables/HttpService.html":{}}}],["undefined",{"_index":517,"title":{},"body":{"interfaces/StoreConfig.html":{}}}],["unicode",{"_index":376,"title":{},"body":{"injectables/JwtService.html":{}}}],["updatedat",{"_index":275,"title":{},"body":{"interfaces/File.html":{}}}],["updateentry",{"_index":294,"title":{},"body":{"injectables/HttpService.html":{}}}],["updateentry(contenttypepluralized",{"_index":341,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["upload",{"_index":295,"title":{},"body":{"injectables/HttpService.html":{}}}],["upload(data",{"_index":345,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["url",{"_index":68,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"index.html":{}}}],["urlbase64decode",{"_index":367,"title":{},"body":{"injectables/JwtService.html":{}}}],["urlbase64decode(str",{"_index":395,"title":{},"body":{"injectables/JwtService.html":{}}}],["usar",{"_index":589,"title":{},"body":{"index.html":{}}}],["use",{"_index":637,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":510,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["user",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{}}}],["users",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["usevalue",{"_index":509,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["usted",{"_index":603,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":65,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"index.html":{}}}],["utilizado",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":472,"title":{},"body":{"injectables/JwtService.html":{}}}],["vez",{"_index":597,"title":{},"body":{"index.html":{}}}],["viene",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["void",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{}}}],["warranties",{"_index":664,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":659,"title":{},"body":{"license.html":{}}}],["whether",{"_index":677,"title":{},"body":{"license.html":{}}}],["window.localstorage.removeitem(this.storeconfig.localstorage.key",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["window.localstorage.setitem",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["window.location",{"_index":595,"title":{},"body":{"index.html":{}}}],["without",{"_index":632,"title":{},"body":{"license.html":{}}}],["y",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/services/auth.service.ts\n        \n\n            \n                Descripción\n            \n            \n                Servicio para la autenticación\n\n            \n\n\n            \n                Ejemplo\n            \n            \n            \n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authenticateProvider\n                            \n                            \n                                    Private\n                                clearToken\n                            \n                            \n                                    Public\n                                forgotPassword\n                            \n                            \n                                    Public\n                                getCurrentUser\n                            \n                            \n                                    Public\n                                getProviderAuthenticationUrl\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Private\n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(baseUrl: string, storeConfig: StoreConfig, http: HttpClient, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Definido en src/lib/services/auth.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor predeterminado.\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tu Strapi host.\n\n                                                        \n                                                \n                                                \n                                                        storeConfig\n                                                  \n                                                        \n                                                                        StoreConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Extienda la configuración de storeConfig.\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicios Http de Angular\n\n                                                        \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio para almacenar el token de autenticación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            authenticateProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authenticateProvider(provider: Provider, params?: ProviderToken)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:194\n                \n            \n\n\n            \n                \n                    Autentique al usuario con el token presente en la URL (para el navegador) o en params (en Node.js)\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                Provider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Proveedor\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                ProviderToken\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Proveedor del token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearToken()\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:239\n                \n            \n\n\n            \n                \n                    Borrar token\n\n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(email: string, url: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:151\n                \n            \n\n\n            \n                \n                    Envía un correo electrónico a un usuario con el enlace de su página de restablecimiento de contraseña.\n\nEste enlace contiene un código de parámetro de URL que se requiere para restablecer la contraseña del usuario.\nRecibido enlace url formato https://my-domain.com/rest-password?code=privateCode.\n\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Email a donde se enviara el correo electrónico\n\n                                    \n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Url a donde sera enviado para reestablecer la contraseña\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrentUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:118\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Obteniendo el usuario actual\n\n\n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Observable con el usuario actual\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProviderAuthenticationUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProviderAuthenticationUrl(provider: Provider)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:184\n                \n            \n\n\n            \n                \n                    Recupere la URL del proveedor de conexión\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                Provider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        'Facebook', 'Twitter', etc..\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        Url del provider\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getToken()\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:59\n                \n            \n\n\n            \n                \n                    Obtener token\n\n\n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        Cadena de texto con el Token\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthenticated()\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:126\n                \n            \n\n\n            \n                \n                    Saber si hay un usuario autenticado.\n\n\n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        Boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(identifier: string, password: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:94\n                \n            \n\n\n            \n                \n                    Inicie sesión obteniendo un token de autenticación.\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Puede ser un correo electrónico o un nombre de usuario.\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contraseña\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        Token de usuario de autenticación y perfil\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:134\n                \n            \n\n\n            \n                \n                    Cerrar sesión\n\n\n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        Si se cerró o no la sesión.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: any)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:77\n                \n            \n\n\n            \n                \n                    Registra un nuevo usuario.\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Array de todos los campos utilizado en su tabla users\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        Authentication User token and profile\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(code: string, password: string, passwordConfirmation: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:166\n                \n            \n\n\n            \n                \n                    Restablecer la contraseña del usuario.\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Es el código recibido en el correo\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nueva contraseña\n\n                                    \n                                \n                                \n                                    passwordConfirmation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Confirmación de la nueva contraseña\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setToken(token: string, comesFromStorage?: boolean)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:218\n                \n            \n\n\n            \n                \n                    Guardar Token para poder recordarlo\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Recuperado por registro o inicio de sesión\n\n                                    \n                                \n                                \n                                    comesFromStorage\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Viene de almacenamiento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                        \n                            \n                                    Definido en src/lib/services/auth.service.ts:26\n                            \n                        \n\n                \n                    \n                        URL del host Strapi\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { JwtService } from './jwt.service';\n\nimport { Authentication } from '../models/authentication';\nimport { StoreConfig } from '../models/storeConfig';\nimport { Provider } from '../models/provider';\nimport { ProviderToken } from '../models/providerToken';\n\nimport { Observable } from 'rxjs';\nimport * as Cookies from 'js-cookie';\n\n/**\n * Servicio para la autenticación\n * @Template T\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n   * URL del host Strapi\n   */\n  private baseUrl: string;\n\n  /**\n   * Constructor predeterminado.\n   * @param baseUrl Tu Strapi host.\n   * @param storeConfig Extienda la configuración de storeConfig.\n   * @param http Servicios Http de Angular\n   * @param jwtService Servicio para almacenar el token de autenticación\n   */\n  constructor(@Inject('baseUrl') baseUrl: string, @Inject('config') private storeConfig: StoreConfig, private readonly http: HttpClient,\n              private jwtService: JwtService) {\n\n    this.baseUrl = baseUrl;\n\n    this.storeConfig = {\n      cookie: {\n        key: 'jwt',\n        options: {\n          path: '/'\n        }\n      },\n      localStorage: {\n        key: 'jwt'\n      },\n      ...storeConfig\n    };\n    this.getToken();\n  }\n\n  /**\n   * Obtener token\n   * @returns Cadena de texto con el Token\n   */\n  public getToken(): string {\n    let existingToken: string;\n\n    if (this.storeConfig.cookie) {\n      existingToken = Cookies.get(this.storeConfig.cookie.key);\n    } else if (this.storeConfig.localStorage) {\n      existingToken = JSON.parse(window.localStorage.getItem(\n        this.storeConfig.localStorage.key\n      ) as string);\n    }\n    return existingToken;\n  }\n\n  /**\n   * Registra un nuevo usuario.\n   * @param data Array de todos los campos utilizado en su tabla users\n   * @returns Authentication User token and profile\n   */\n  public register(data: any): Observable {\n    this.clearToken();\n    const authentication = this.http.post(`${this.baseUrl}/auth/local/register`, data);\n\n    const token = authentication;\n    token.subscribe(jwt => {\n      this.setToken(jwt.jwt);\n    });\n    return authentication;\n  }\n\n  /**\n   * Inicie sesión obteniendo un token de autenticación.\n   * @param identifier Puede ser un correo electrónico o un nombre de usuario.\n   * @param password Contraseña\n   * @returns Token de usuario de autenticación y perfil\n   */\n  public login(identifier: string, password: string): Observable {\n\n    this.clearToken();\n\n    const authentication = this.http.post(`${this.baseUrl}/auth/local`, {\n      identifier,\n      password\n    });\n\n    const token = authentication;\n\n    token.subscribe(jwt => {\n      this.setToken(jwt.jwt);\n    });\n\n    return authentication;\n\n  }\n\n  /**\n   * Obteniendo el usuario actual\n   * @param T Parametro para concordar con su interfaz\n   * @returns Observable con el usuario actual\n   */\n  public getCurrentUser(): Observable {\n    return this.http.get(`${this.baseUrl}/users/me`);\n  }\n\n  /**\n   * Saber si hay un usuario autenticado.\n   * @returns Boolean\n   */\n  public isAuthenticated(): boolean {\n    return !this.jwtService.isTokenExpired(this.getToken());\n  }\n\n  /**\n   * Cerrar sesión\n   * @returns Si se cerró o no la sesión.\n   */\n  public logout(): boolean {\n    try {\n      this.clearToken();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Envía un correo electrónico a un usuario con el enlace de su página de restablecimiento de contraseña.\n   * Este enlace contiene un código de parámetro de URL que se requiere para restablecer la contraseña del usuario.\n   * Recibido enlace url formato https://my-domain.com/rest-password?code=privateCode.\n   * @param email Email a donde se enviara el correo electrónico\n   * @param url Url a donde sera enviado para reestablecer la contraseña\n   * @returns Observable\n   */\n  public forgotPassword(email: string, url: string) {\n    this.clearToken();\n    return this.http.post(`${this.baseUrl}/auth/local`, {\n      email,\n      url\n    });\n  }\n\n  /**\n   * Restablecer la contraseña del usuario.\n   * @param code Es el código recibido en el correo\n   * @param password Nueva contraseña\n   * @param passwordConfirmation Confirmación de la nueva contraseña\n   * @returns Observable\n   */\n  public resetPassword(\n    code: string,\n    password: string,\n    passwordConfirmation: string\n  ) {\n    this.clearToken();\n    return this.http.post(`${this.baseUrl}/auth/reset-password`, {\n      code,\n      password,\n      passwordConfirmation\n    });\n  }\n\n  /**\n   * Recupere la URL del proveedor de conexión\n   * @param provider 'Facebook', 'Twitter', etc..\n   * @returns Url del provider\n   */\n  public getProviderAuthenticationUrl(provider: Provider): string {\n    return `${this.baseUrl}/connect/${provider}`;\n  }\n\n  /**\n   * Autentique al usuario con el token presente en la URL (para el navegador) o en `params` (en Node.js)\n   * @param provider Proveedor\n   * @param params Proveedor del token\n   * @returns Observable\n   */\n  public authenticateProvider(provider: Provider, params?: ProviderToken): Observable {\n    this.clearToken();\n    const headers = new HttpHeaders();\n    headers.append('access_token', params.access_token);\n    headers.append('code', params.code);\n    headers.append('oauth_token', params.oauth_token);\n\n    const authentication = this.http.get(`${this.baseUrl}/auth/${provider}/callback`, {\n      headers\n    });\n\n    const token = authentication;\n    token.subscribe(jwt => {\n      this.setToken(jwt.jwt);\n    });\n\n    return authentication;\n  }\n\n  /**\n   * Guardar Token para poder recordarlo\n   * @param token Recuperado por registro o inicio de sesión\n   * @param comesFromStorage  Viene de almacenamiento\n   */\n  private setToken(token: string, comesFromStorage?: boolean) {\n    if (!comesFromStorage) {\n      if (this.storeConfig.localStorage) {\n        window.localStorage.setItem(\n          this.storeConfig.localStorage.key,\n          JSON.stringify(token)\n        );\n      }\n      if (this.storeConfig.cookie) {\n        Cookies.set(\n          this.storeConfig.cookie.key,\n          token,\n          this.storeConfig.cookie.options\n        );\n      }\n    }\n  }\n\n  /**\n   * Borrar token\n   */\n  private clearToken(): void {\n    if (this.storeConfig.localStorage) {\n      window.localStorage.removeItem(this.storeConfig.localStorage.key);\n    }\n    if (this.storeConfig.cookie) {\n      Cookies.remove(\n        this.storeConfig.cookie.key,\n        this.storeConfig.cookie.options\n      );\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/Authentication.html":{"url":"interfaces/Authentication.html","title":"interface - Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Authentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/models/authentication.ts\n        \n\n            \n                Descripción\n            \n            \n                Modelo de autenticación\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwt\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Token\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Usuario\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Authentication {\n  /**\n   * Usuario\n   */\n  user: object;\n  /**\n   * Token\n   */\n  jwt: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/CookieConfig.html":{"url":"interfaces/CookieConfig.html","title":"interface - CookieConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CookieConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/models/cookieConfig.ts\n        \n\n            \n                Descripción\n            \n            \n                Configuración para almacenar la Cookie del Token\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Llave en donde se almacenara el token\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Opciones\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CookieConfig {\n  /**\n   * Llave en donde se almacenara el token\n   */\n  key: string;\n  /**\n   * Opciones\n   */\n  options: object;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/models/file.ts\n        \n\n            \n                Descripción\n            \n            \n                Archivo\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        ext\n                                \n                                \n                                        hash\n                                \n                                \n                                        mime\n                                \n                                \n                                        name\n                                \n                                \n                                        provider\n                                \n                                \n                                        related\n                                \n                                \n                                        sha256\n                                \n                                \n                                        size\n                                \n                                \n                                        updatedAt\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de creación\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Extensión\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Hash\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tipo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Nombre del archivo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Proveedor\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        related\n                                    \n                                \n                                \n                                    \n                                        related:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Relacionados\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sha256\n                                    \n                                \n                                \n                                    \n                                        sha256:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Sha256\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tamaño\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Fecha de actualización\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface File {\n  /**\n   * Nombre del archivo\n   */\n  name: string;\n  /**\n   * Sha256\n   */\n  sha256: string;\n  /**\n   * Hash\n   */\n  hash: string;\n  /**\n   * Extensión\n   */\n  ext: string;\n  /**\n   * Tamaño\n   */\n  size: string;\n  /**\n   * Tipo\n   */\n  mime: string;\n  /**\n   * Url\n   */\n  url: string;\n  /**\n   * Proveedor\n   */\n  provider: string;\n  /**\n   * Fecha de actualización\n   */\n  updatedAt: string;\n  /**\n   * Fecha de creación\n   */\n  createdAt: string;\n  /**\n   * Relacionados\n   */\n  related: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/services/http.service.ts\n        \n\n            \n                Descripción\n            \n            \n                Obtener los datos de la API\n\n            \n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEntry\n                            \n                            \n                                    Public\n                                deleteEntry\n                            \n                            \n                                    Public\n                                getEntries\n                            \n                            \n                                    Public\n                                getEntry\n                            \n                            \n                                    Public\n                                getEntryCount\n                            \n                            \n                                    Public\n                                getFile\n                            \n                            \n                                    Public\n                                getFiles\n                            \n                            \n                                    Public\n                                searchFiles\n                            \n                            \n                                    Public\n                                updateEntry\n                            \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(baseUrl: string, http: HttpClient)\n                    \n                \n                        \n                            \n                                Definido en src/lib/services/http.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor por defecto\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Url del host de Strapi\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio HttpClient de Angular\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEntry(contentTypePluralized: string, data: T, params?: HttpParams)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:70\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Crear datos\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    contentTypePluralized\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tipo de contenido Pluralizado\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nueva entrada\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Parametros\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteEntry(contentTypePluralized: string, id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:99\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Eliminar una entrada\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    contentTypePluralized\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tipo de contenido Pluralizado\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID de entrada\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEntries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntries(contentTypePluralized: string, params?: HttpParams)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:35\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Lista de entradas\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    contentTypePluralized\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tipo de contenido Pluralizado\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Filtrar y ordenar consultas.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntry(contentTypePluralized: string, id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:59\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Obtén una entrada específica\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    contentTypePluralized\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tipo de contenido Pluralizado\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID de entrada\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEntryCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntryCount(contentTypePluralized: string, params?: HttpParams)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:47\n                \n            \n\n\n            \n                \n                    Obtenga el recuento total de entradas con los criterios proporcionados\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    contentTypePluralized\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tipo de contenido Pluralizado\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Filtrar y ordenar consultas\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFile(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:128\n                \n            \n\n\n            \n                \n                    Obtener un archivo\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID de entrada\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFiles(params?: HttpParams)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:117\n                \n            \n\n\n            \n                \n                    Obtener archivos\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Filtrar y ordenar consultas\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            searchFiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchFiles(query: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:108\n                \n            \n\n\n            \n                \n                    Buscar archivos\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Palabras clave\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEntry(contentTypePluralized: string, id: string, data: T, params?: HttpParams)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:87\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Actualizar datos\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    contentTypePluralized\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tipo de contenido Pluralizado\n\n                                    \n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID de entrada\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nuevos datos\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Parametros\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(data: FormData, params?: HttpParams)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:137\n                \n            \n\n\n            \n                \n                    Subir archivos\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            FormData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FormData\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Parametros\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                        \n                            \n                                    Definido en src/lib/services/http.service.ts:18\n                            \n                        \n\n                \n                    \n                        URL del host de Strapi\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { File } from '../models/file';\n\n/**\n * Obtener los datos de la API\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  /**\n   * URL del host de Strapi\n   */\n  private baseUrl: string;\n\n  /**\n   * Constructor por defecto\n   * @param baseUrl Url del host de Strapi\n   * @param http Servicio `HttpClient` de Angular\n   */\n  constructor(@Inject('baseUrl') baseUrl: string, private readonly http: HttpClient) {\n    this.baseUrl = baseUrl;\n  }\n\n  /**\n   * Lista de entradas\n   * @param contentTypePluralized Tipo de contenido Pluralizado\n   * @param params Filtrar y ordenar consultas.\n   * @return Observable\n   */\n  public getEntries(contentTypePluralized: string, params?: HttpParams): Observable {\n    return this.http.get(`${this.baseUrl}/${contentTypePluralized}`, {\n      params\n    });\n  }\n\n  /**\n   * Obtenga el recuento total de entradas con los criterios proporcionados\n   * @param contentTypePluralized Tipo de contenido Pluralizado\n   * @param params Filtrar y ordenar consultas\n   * @returns Observable\n   */\n  public getEntryCount(contentTypePluralized: string, params?: HttpParams): Observable {\n    return this.http.get(`${this.baseUrl}/${contentTypePluralized}/count`, {\n      params\n    });\n  }\n\n  /**\n   * Obtén una entrada específica\n   * @param contentTypePluralized Tipo de contenido Pluralizado\n   * @param id ID de entrada\n   * @returns Observable\n   */\n  public getEntry(contentTypePluralized: string, id: string): Observable {\n    return this.http.get(`${this.baseUrl}/${contentTypePluralized}/${id}`);\n  }\n\n  /**\n   * Crear datos\n   * @param contentTypePluralized Tipo de contenido Pluralizado\n   * @param data Nueva entrada\n   * @param params Parametros\n   * @returns Observable\n   */\n  public createEntry(contentTypePluralized: string, data: T, params?: HttpParams): Observable {\n    return this.http.post(`${this.baseUrl}/${contentTypePluralized}`,\n      data,\n      {\n        params\n      }\n    );\n  }\n\n  /**\n   * Actualizar datos\n   * @param contentTypePluralized Tipo de contenido Pluralizado\n   * @param id ID de entrada\n   * @param data Nuevos datos\n   * @param params Parametros\n   * @returns Observable\n   */\n  public updateEntry(contentTypePluralized: string, id: string, data: T, params?: HttpParams): Observable {\n    return this.http.put(`${this.baseUrl}/${contentTypePluralized}/${id}`, data, {\n      params\n    });\n  }\n\n  /**\n   * Eliminar una entrada\n   * @param contentTypePluralized Tipo de contenido Pluralizado\n   * @param id ID de entrada\n   * @returns Observable\n   */\n  public deleteEntry(contentTypePluralized: string, id: string): Observable {\n    return this.http.delete(`${this.baseUrl}/${contentTypePluralized}/${id}`);\n  }\n\n  /**\n   * Buscar archivos\n   * @param query Palabras clave\n   * @returns Observable\n   */\n  public searchFiles(query: string): Observable {\n    return this.http.get(`${this.baseUrl}/upload/search/${decodeURIComponent(query)}`);\n  }\n\n  /**\n   * Obtener archivos\n   * @param params Filtrar y ordenar consultas\n   * @returns Observable\n   */\n  public getFiles(params?: HttpParams): Observable {\n    return this.http.get(`${this.baseUrl}/upload/files`, {\n      params\n    });\n  }\n\n  /**\n   * Obtener un archivo\n   * @param id ID de entrada\n   * @returns Observable\n   */\n  public getFile(id: string): Observable {\n    return this.http.get(`${this.baseUrl}/upload/files/${id}`);\n  }\n\n  /**\n   * Subir archivos\n   * @param data FormData\n   * @param params Parametros\n   */\n  public upload(data: FormData, params?: HttpParams): Observable {\n    return this.http.post(`${this.baseUrl}/upload`, data, {\n        params\n      });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/services/jwt.service.ts\n        \n\n            \n                Descripción\n            \n            \n                Tratamiento del token\n\n            \n\n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b64decode\n                            \n                            \n                                    Private\n                                b64DecodeUnicode\n                            \n                            \n                                    Private\n                                decodeToken\n                            \n                            \n                                    Private\n                                getTokenExpirationDate\n                            \n                            \n                                    Public\n                                isTokenExpired\n                            \n                            \n                                    Private\n                                urlBase64Decode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/lib/services/jwt.service.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            b64decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    b64decode(str: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/jwt.service.ts:124\n                \n            \n\n\n            \n                \n                    decodificación base64\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Código\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        Cadena de texto\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            b64DecodeUnicode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    b64DecodeUnicode(str: any)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/jwt.service.ts:109\n                \n            \n\n\n            \n                \n                    Decodificación unicode base64\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Código\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        decodeURIComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            decodeToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeToken(token: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/jwt.service.ts:59\n                \n            \n\n\n            \n                \n                    Decodificar Token\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token a ser tratado\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTokenExpirationDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenExpirationDate(token: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/jwt.service.ts:41\n                \n            \n\n\n            \n                \n                    Saber la fecha de expiración de un Token\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token a ser tratado\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Date | null\n\n                    \n                    \n                        Fecha o Null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTokenExpired\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTokenExpired(token: string, offsetSeconds?: number)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/jwt.service.ts:22\n                \n            \n\n\n            \n                \n                    Saber si un token ha expirado\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token para saber si ha expirado\n\n                                    \n                                \n                                \n                                    offsetSeconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                    \n                                        Segundos compensados\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            urlBase64Decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    urlBase64Decode(str: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/jwt.service.ts:83\n                \n            \n\n\n            \n                \n                    decodificación url Base64\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Código\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        Cadena de texto\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Tratamiento del token\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtService {\n\n  /**\n   * Constructor\n   */\n  constructor() { }\n\n  /**\n   * Saber si un token ha expirado\n   * @param token Token para saber si ha expirado\n   * @param offsetSeconds Segundos compensados\n   * @returns boolean\n   */\n  public isTokenExpired(token: string, offsetSeconds?: number): boolean {\n    if (token == null || token === '') {\n        return true;\n    }\n    const date = this.getTokenExpirationDate(token);\n    offsetSeconds = offsetSeconds || 0;\n\n    if (date === null) {\n      return false;\n    }\n\n    return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n  }\n\n  /**\n   * Saber la fecha de expiración de un Token\n   * @param token Token a ser tratado\n   * @returns Fecha o Null\n   */\n  private getTokenExpirationDate(token: string): Date | null {\n    let decoded: any;\n    decoded = this.decodeToken(token);\n\n    if (!decoded || !decoded.hasOwnProperty('exp')) {\n      return null;\n    }\n\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n\n    return date;\n  }\n\n  /**\n   * Decodificar Token\n   * @param token Token a ser tratado\n   */\n  private decodeToken(token: string): any {\n    if (token == null || token === '') {\n      return null;\n    }\n\n    const parts = token.split('.');\n\n    if (parts.length !== 3) {\n      throw new Error('The inspected token doesn\\'t appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.');\n    }\n\n    const decoded = this.urlBase64Decode(parts[1]);\n    if (!decoded) {\n      throw new Error('Cannot decode the token.');\n    }\n\n    return JSON.parse(decoded);\n  }\n\n  /**\n   * decodificación url Base64\n   * @param str Código\n   * @returns Cadena de texto\n   */\n  private urlBase64Decode(str: string): string {\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\n    switch (output.length % 4) {\n      case 0: {\n        break;\n      }\n      case 2: {\n        output += '==';\n        break;\n      }\n      case 3: {\n        output += '=';\n        break;\n      }\n      default: {\n        throw 'Illegal base64url string!';\n      }\n    }\n    return this.b64DecodeUnicode(output);\n  }\n\n  /**\n   * Decodificación unicode base64\n   * @param str Código\n   * @returns decodeURIComponent\n   */\n  private b64DecodeUnicode(str: any) {\n    return decodeURIComponent(\n      Array.prototype.map\n        .call(this.b64decode(str), (c: any) => {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join('')\n    );\n  }\n\n  /**\n   * decodificación base64\n   * @param str Código\n   * @returns Cadena de texto\n   */\n  private b64decode(str: string): string {\n    const chars =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let output = '';\n\n    str = String(str).replace(/=+$/, '');\n\n    if (str.length % 4 === 1) {\n      throw new Error(\n        '\\'atob\\' failed: The string to be decoded is not correctly encoded.'\n      );\n    }\n\n    for (\n      // initialize result and counters\n      let bc = 0, bs: any, buffer: any, idx = 0;\n      // get next character\n      (buffer = str.charAt(idx++));\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer &&\n      (\n        (bs = bc % 4 ? bs * 64 + buffer : buffer),\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4\n      )\n        ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n        : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/LocalStorageConfig.html":{"url":"interfaces/LocalStorageConfig.html","title":"interface - LocalStorageConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalStorageConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/models/localStorageConfig.ts\n        \n\n            \n                Descripción\n            \n            \n                Configuración del LocalStorage\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Llave de almacenamiento\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LocalStorageConfig {\n  /**\n   * Llave de almacenamiento\n   */\n  key: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/NgStrapiModule.html":{"url":"modules/NgStrapiModule.html","title":"module - NgStrapiModule","body":"\n                   \n\n\n\n\n    Módulos\n    NgStrapiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/lib/ng-strapi.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(baseUrl: string, storeConfig?: StoreConfig)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/ng-strapi.module.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    storeConfig\n                                    \n                                                StoreConfig\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { HttpService } from './services/http.service';\nimport { StoreConfig } from './models/storeConfig';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n@NgModule({\n  providers: [\n  ],\n  imports: [\n    HttpClientModule\n  ]\n})\nexport class NgStrapiModule {\n  public static forRoot(baseUrl: string, storeConfig?: StoreConfig): ModuleWithProviders {\n    return {\n      ngModule: NgStrapiModule,\n      providers: [\n        HttpService,\n        { provide: 'config', useValue: storeConfig },\n        { provide: 'baseUrl', useValue: baseUrl },\n        { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptorService, multi: true }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/ProviderToken.html":{"url":"interfaces/ProviderToken.html","title":"interface - ProviderToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProviderToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/models/providerToken.ts\n        \n\n            \n                Descripción\n            \n            \n                Configuración del proveedor del Token\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        access_token\n                                \n                                \n                                            Opcional\n                                        code\n                                \n                                \n                                            Opcional\n                                        oauth_token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Código de acceso Token\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Código\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oauth_token\n                                    \n                                \n                                \n                                    \n                                        oauth_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Código de autenticación con proveedor\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ProviderToken {\n  /**\n   * Código de acceso Token\n   */\n  access_token?: string;\n  /**\n   * Código\n   */\n  code?: string;\n  /**\n   * Código de autenticación con proveedor\n   */\n  oauth_token?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/StoreConfig.html":{"url":"interfaces/StoreConfig.html","title":"interface - StoreConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StoreConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/models/storeConfig.ts\n        \n\n            \n                Descripción\n            \n            \n                Configuración para almacenar el Token\n\n            \n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        cookie\n                                \n                                \n                                            Opcional\n                                        localStorage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        cookie\n                                    \n                                \n                                \n                                    \n                                        cookie:         CookieConfig | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         CookieConfig | \"undefined\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuración para Cookie\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localStorage\n                                    \n                                \n                                \n                                    \n                                        localStorage:         LocalStorageConfig | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         LocalStorageConfig | \"undefined\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Configuración para localStorage\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CookieConfig } from './cookieConfig';\nimport { LocalStorageConfig } from './localStorageConfig';\n\n/**\n * Configuración para almacenar el Token\n */\nexport interface StoreConfig {\n  /**\n   * Configuración para Cookie\n   */\n  cookie?: CookieConfig | false;\n  /**\n   * Configuración para localStorage\n   */\n  localStorage?: LocalStorageConfig | false;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interceptors/TokenInterceptorService.html":{"url":"interceptors/TokenInterceptorService.html","title":"interceptor - TokenInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptores\n  TokenInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/services/token-interceptor.service.ts\n        \n\n            \n                Descripción\n            \n            \n                Interceptar las peticiones Http para enviar el Token de autenticación\n\n            \n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Definido en src/lib/services/token-interceptor.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor por defecto\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de Autenticación\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/token-interceptor.service.ts:26\n                \n            \n\n\n            \n                \n                    Intercepción de la petición\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Petición\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Como resolver la petición\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable>\n\n                    \n                    \n                        Retorna la petición interceptada\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n/**\n * Interceptar las peticiones Http para enviar el Token de autenticación\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  /**\n   * Constructor por defecto\n   * @param auth Servicio de Autenticación\n   */\n  constructor(private auth: AuthService) { }\n\n  /**\n   * Intercepción de la petición\n   * @param request Petición\n   * @param next Como resolver la petición\n   * @returns Retorna la petición interceptada\n   */\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n\n    if (this.auth.getToken()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this.auth.getToken()}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Cobertura de la documentación\n\n\n\n    \n\n\n\n    \n        \n            Fichero\n            Tipo\n            Identificador\n            Declaraciones\n        \n    \n    \n        \n            \n                \n                src/lib/models/authentication.ts\n            \n            interface\n            Authentication\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/models/cookieConfig.ts\n            \n            interface\n            CookieConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/models/file.ts\n            \n            interface\n            File\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/lib/models/localStorageConfig.ts\n            \n            interface\n            LocalStorageConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/lib/models/providerToken.ts\n            \n            interface\n            ProviderToken\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/lib/models/storeConfig.ts\n            \n            interface\n            StoreConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/lib/services/http.service.ts\n            \n            injectable\n            HttpService\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/lib/services/jwt.service.ts\n            \n            injectable\n            JwtService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/lib/services/token-interceptor.service.ts\n            \n            interceptor\n            TokenInterceptorService\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencias entre pares\n    \n    \n        \n            @angular/common : ^8.2.5\n        \n            @angular/core : ^8.2.5\n        \n            rxjs : ~6.4.0\n        \n            js-cookie : ^2.2.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgStrapi\n \nInstalar\nnpm install ng-strapiImportar\nImportar modulo NgStrapiModule\nimport { NgStrapiModule } from 'ng-strapi';\n\n@NgModule({\n    imports: [\n      NgStrapiModule.forRoot(\n        'http://localhost:1337', //Url de strapi\n        {\n          cookie: {\n            key: 'jwt',\n            options: {\n              path: '/'\n            }\n          },\n          localStorage: {\n            key: 'jwt'\n          }\n        });\n    ]\n})\nSe recomienda usar localStorage en null\n\nUsar\nimport { AuthService, HttpService } from 'ng-strapi';\n\nconstructor(private auth: AuthServiceStrapi, private http: HttpService) {}Autenticación\nLocal\nthis.auth.login(username, password);Providers\n// Redirija a su usuario a la página de autenticación del proveedor.\nwindow.location = this.auth.getProviderAuthenticationUrl('facebook');Una vez autorizado, el proveedor redirigirá al usuario a su aplicación con un token de acceso en la URL.\n// Complete la autenticación: (El SDK almacenará el token de acceso por usted)\nthis.auth.authenticateProvider('facebook');Datos\nAhora puede buscar API privadas\nthis.http.getEntries('users').subscribe(users => {\n  //Aquí trate sus datos\n});API\nAutenticación API\nregister(data: any): Observable\n\nlogin(identifier: string, password: string): Observable\n\ngetCurrentUser(): Observable\n\nisAuthenticated(): boolean\n\nlogout(): boolean\n\nforgotPassword(email: string, url: string)\n\nresetPassword(code: string, password: string, passwordConfirmation: string)\n\ngetProviderAuthenticationUrl(provider: Provider): string\n\nauthenticateProvider(provider: Provider, params?: ProviderToken): ObservableHttp\ngetEntries(contentTypePluralized: string, params?: HttpParams): Observable\n\ngetEntryCount(contentType: string, params?: HttpParams): Observable\n\ngetEntry(contentTypePluralized: string, id: string): Observable\n\ncreateEntry(contentTypePluralized: string, data: T, params?: HttpParams): Observable\n\nupdateEntry(contentTypePluralized: string, id: string, data: T, params?: HttpParams): Observable\n\ndeleteEntry(contentTypePluralized: string, id: string): Observable\n\nsearchFiles(query: string): Observable\n\ngetFiles(params?: HttpParams): Observable\n\ngetFile(id: string): Observable\n\nupload(data: FormData, params?: HttpParams): Observable\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Adrián UB.\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Módulos\n\n\n    \n            \n                \n                    \n                        NgStrapiModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Descripción general\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Módulo\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Inyectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscelánea\n  Alias de tipo\n\n\n\n    Índice\n    \n        \n            \n                \n                    \n                        \n                            Provider   (src/.../provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/provider.ts\n    \n    \n        \n            \n                \n                    \n                    Provider\n                \n            \n            \n                \n                    Proveedores de autenticación\n\n                \n            \n            \n                \n                        \"facebook\" | \"google\" | \"github\" | \"twitter\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"}}
}
