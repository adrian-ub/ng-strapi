var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/AuthService.html",[0,0.776,1,1.226]],["body/injectables/AuthService.html",[0,0.555,1,0.877,2,0.617,3,0.199,4,0.199,5,0.162,6,0.878,7,0.199,8,0.555,9,2.295,10,2.173,11,0.877,12,2.695,13,1.839,14,2.752,15,1.839,16,2.186,17,1.839,18,2.752,19,2.186,20,1.839,21,2.186,22,1.839,23,2.361,24,1.839,25,0.617,26,0.878,27,1.062,28,1.747,29,1.556,30,2.186,31,1.95,32,2.035,33,1.748,34,1.839,35,1.813,36,0.06,37,1.747,38,0.454,39,1.29,40,1.461,41,2.12,42,1.556,43,1.313,44,1.105,45,1.026,46,1.963,47,2.12,48,1.105,49,2.752,50,1.461,51,1.814,52,1.105,53,1.839,54,1.105,55,0.527,56,0.728,57,1.461,58,1.105,59,1.105,60,1.105,61,2.304,62,1.461,63,3.019,64,1.105,65,1.839,66,1.105,67,1.461,68,1.105,69,1.212,70,0.878,71,2.186,72,1.105,73,1.876,74,1.839,75,2.752,76,1.105,77,2.014,78,1.339,79,0.878,80,0.453,81,1.839,82,0.617,83,1.105,84,2.187,85,1.105,86,0.878,87,1.105,88,1.105,89,0.617,90,1.105,91,0.878,92,1.026,93,0.617,94,0.617,95,0.199,96,0.527,97,0.878,98,1.105,99,0.878,100,0.878,101,1.105,102,1.026,103,1.026,104,0.728,105,0.878,106,0.728,107,1.105,108,2.752,109,2.361,110,1.105,111,2.361,112,1.105,113,1.839,114,1.92,115,3.298,116,3.019,117,1.105,118,2.361,119,2.361,120,1.839,121,1.105,122,1.105,123,0.878,124,0.728,125,1.105,126,1.105,127,0.728,128,2.186,129,1.105,130,1.105,131,1.839,132,0.728,133,1.105,134,1.105,135,1.105,136,1.105,137,1.105,138,1.105,139,1.105,140,1.105,141,1.105,142,1.105,143,1.839,144,1.839,145,1.105,146,1.105,147,0.013,148,0.013,149,0.013,150,0.013,151,0.013,152,0.013]],["title/interfaces/Authentication.html",[84,1.434,153,0.298]],["body/interfaces/Authentication.html",[3,0.639,4,0.639,5,0.52,7,0.639,8,1.299,27,1.004,36,0.057,38,0.498,84,2.399,95,0.639,103,2.686,147,0.04,148,0.04,149,0.04,150,0.04,151,0.04,152,0.04,153,0.41,154,1.249,155,2.816,156,4.814,157,3.678]],["title/interfaces/CookieConfig.html",[153,0.298,158,1.434]],["body/interfaces/CookieConfig.html",[3,0.639,4,0.639,5,0.52,7,0.639,8,1.299,27,1.004,36,0.057,38,0.498,95,0.639,102,2.686,104,3.173,147,0.04,148,0.04,149,0.04,150,0.04,151,0.04,152,0.04,153,0.41,154,1.249,157,3.678,158,2.399,159,2.816]],["title/interfaces/File.html",[153,0.298,160,1.434]],["body/interfaces/File.html",[3,0.485,4,0.485,5,0.395,7,0.485,8,1.089,27,1.15,36,0.058,38,0.579,41,2.424,51,2.863,95,0.485,147,0.03,148,0.03,149,0.03,150,0.03,151,0.03,152,0.03,153,0.311,154,0.947,160,2.011,161,2.136,162,4.345,163,4.345,164,4.345,165,4.345,166,4.345,167,4.345,168,4.345,169,4.345,170,4.345]],["title/injectables/HttpService.html",[0,0.776,171,1.226]],["body/injectables/HttpService.html",[0,0.638,2,0.73,3,0.236,4,0.236,5,0.192,7,0.236,8,0.638,9,1.7,10,2.355,11,1.008,12,2.758,25,0.73,26,1.04,27,1.094,29,1.75,30,2.42,32,2.062,33,1.772,35,2.176,36,0.059,37,2.024,38,0.533,39,1.494,42,3.148,45,1.994,46,1.979,47,2.649,55,1.595,56,2.795,69,2.734,78,1.073,79,1.04,80,0.536,82,0.73,89,0.73,93,0.73,94,0.73,95,0.236,96,0.624,97,1.04,99,1.04,100,1.04,114,1.979,147,0.015,148,0.015,149,0.015,150,0.015,151,0.015,152,0.015,160,0.73,171,1.008,172,1.04,173,2.112,174,2.112,175,2.112,176,2.112,177,2.112,178,2.112,179,2.112,180,2.112,181,2.112,182,2.112,183,2.112,184,1.678,185,3.721,186,1.309,187,3.343,188,1.678,189,3.296,190,1.309,191,1.678,192,1.309,193,1.678,194,1.309,195,1.678,196,1.309,197,1.309,198,1.678,199,1.309,200,1.678,201,1.309,202,1.678,203,1.309,204,1.309,205,1.678,206,1.309,207,1.678,208,2.109,209,1.309,210,1.309,211,1.309,212,1.309,213,1.309,214,1.309,215,1.309,216,1.309,217,1.309,218,1.309,219,1.309,220,1.309]],["title/injectables/JwtService.html",[0,0.776,31,1.434]],["body/injectables/JwtService.html",[0,0.634,2,0.725,3,0.234,4,0.234,5,0.191,7,0.234,9,2.513,11,1.002,12,1.474,25,1.474,27,1.029,31,1.171,32,1.789,33,1.537,35,1.7,36,0.061,37,1.7,38,0.412,39,1.255,45,0.725,46,1.7,61,1.384,77,2.572,78,0.458,80,0.533,93,0.725,94,0.725,95,0.234,96,0.62,103,0.725,114,2.02,116,2.646,123,1.032,124,0.856,127,0.856,132,2.195,147,0.024,148,0.015,149,0.015,150,0.015,151,0.015,152,0.015,221,1.032,222,2.1,223,2.1,224,2.1,225,2.1,226,2.1,227,2.1,228,1.299,229,2.1,230,1.299,231,3.034,232,2.1,233,1.299,234,2.1,235,1.299,236,2.1,237,1.299,238,3.562,239,2.978,240,2.1,241,3.562,242,2.642,243,1.299,244,2.1,245,1.299,246,1.299,247,2.83,248,1.299,249,1.299,250,1.299,251,3.562,252,1.299,253,1.299,254,1.299,255,1.299,256,1.299,257,2.1,258,1.299,259,1.299,260,1.668,261,3.034,262,1.299,263,1.299,264,1.299,265,1.299,266,1.299,267,1.299,268,1.299,269,1.299,270,1.299,271,1.299,272,1.299,273,1.299,274,1.299,275,1.299,276,1.299,277,3.562,278,1.299,279,1.299,280,1.299,281,1.299,282,1.299,283,3.33,284,2.642,285,2.642,286,2.642,287,1.299,288,1.299,289,1.299,290,1.299,291,1.299,292,1.299,293,1.299,294,1.299,295,1.299,296,1.299,297,1.299,298,1.299,299,1.299,300,1.299,301,1.299,302,1.668,303,1.299,304,1.299,305,1.299,306,1.299,307,1.299,308,2.1,309,1.299,310,3.034,311,3.034,312,3.562,313,1.299,314,1.032,315,3.034,316,1.299,317,2.1,318,1.668,319,1.299,320,1.299,321,1.299,322,2.1,323,1.299,324,1.299,325,2.1,326,1.299,327,1.299,328,1.299,329,1.299,330,1.299,331,1.299,332,1.299,333,1.032,334,1.299,335,1.299,336,1.299]],["title/interfaces/LocalStorageConfig.html",[153,0.298,337,1.434]],["body/interfaces/LocalStorageConfig.html",[3,0.663,4,0.663,5,0.539,7,0.663,8,1.327,27,1.02,36,0.056,38,0.425,95,0.663,102,2.718,147,0.042,148,0.042,149,0.042,150,0.042,151,0.042,152,0.042,153,0.425,154,1.295,337,2.452,338,2.919]],["title/modules/NgStrapiModule.html",[339,2.042,340,1.434]],["body/modules/NgStrapiModule.html",[3,0.488,4,0.488,5,0.397,10,2.688,11,1.291,12,1.509,27,0.885,28,2.313,32,1.291,33,1.109,35,1.291,36,0.06,37,1.291,38,0.313,39,0.953,45,1.509,46,1.291,78,1.599,80,1.109,82,1.509,86,2.149,95,0.488,96,1.291,114,1.291,124,1.783,147,0.031,148,0.031,149,0.031,150,0.031,151,0.031,152,0.031,171,1.727,340,2.276,341,2.149,342,3.619,343,2.705,344,3.619,345,2.705,346,3.619,347,2.705,348,4.079,349,3.24,350,2.019,351,2.705,352,2.705,353,2.705,354,3.619,355,3.619,356,2.875,357,2.149,358,4.079,359,2.705,360,3.619,361,2.705,362,2.705]],["title/interfaces/ProviderToken.html",[43,1.226,153,0.298]],["body/interfaces/ProviderToken.html",[3,0.604,4,0.604,5,0.491,7,0.604,8,1.254,27,1.108,36,0.057,38,0.523,39,1.742,43,1.981,73,3.749,95,0.604,147,0.038,148,0.038,149,0.038,150,0.038,151,0.038,152,0.038,153,0.388,154,1.179,363,2.659,364,4.72,365,4.72]],["title/interfaces/StoreConfig.html",[28,1.226,153,0.298]],["body/interfaces/StoreConfig.html",[3,0.58,4,0.58,5,0.472,7,0.58,8,1.223,28,1.932,36,0.059,38,0.469,39,1.639,78,1.427,92,2.596,95,0.58,106,3.066,127,2.669,147,0.036,148,0.036,149,0.036,150,0.036,151,0.036,152,0.036,153,0.372,154,1.133,158,2.675,337,2.675,366,2.555,367,4.653]],["title/interceptors/TokenInterceptorService.html",[350,1.434,368,2.042]],["body/interceptors/TokenInterceptorService.html",[0,1.102,1,2.088,3,0.494,4,0.494,5,0.402,7,0.494,11,1.741,25,1.528,32,1.741,33,1.496,35,1.741,36,0.06,37,1.741,38,0.422,39,1.285,46,1.306,47,2.289,78,1.542,80,1.122,82,1.528,89,1.528,93,1.528,94,1.528,95,0.494,96,1.306,114,1.306,128,2.899,147,0.031,148,0.031,149,0.031,150,0.031,151,0.031,152,0.031,314,3.26,350,2.036,369,2.738,370,3.26,371,2.175,372,3.649,373,2.738,374,2.738,375,2.899,376,3.649,377,4.376,378,4.376,379,2.738,380,2.738,381,3.649,382,2.738,383,2.738,384,2.175,385,3.649,386,2.738,387,2.738,388,2.738,389,2.738,390,2.738]],["title/coverage.html",[391,3.496]],["body/coverage.html",[0,1.308,1,1.462,5,0.45,6,2.434,28,1.462,31,1.709,36,0.058,38,0.355,43,1.462,55,1.462,84,1.709,132,2.019,147,0.035,148,0.035,149,0.035,150,0.035,151,0.035,152,0.035,153,0.56,155,2.434,158,1.709,159,2.434,160,1.709,161,2.434,171,1.462,172,2.434,221,2.434,247,4.027,318,2.434,337,1.709,338,2.434,350,1.709,363,2.434,366,2.434,368,2.434,370,2.434,371,2.434,392,3.063,393,2.434,394,3.063,395,3.063,396,3.063,397,4.57,398,3.063,399,3.063,400,3.063,401,3.063,402,3.063,403,3.063,404,3.063]],["title/dependencies.html",[405,2.152,406,2.453]],["body/dependencies.html",[36,0.058,80,1.55,89,2.11,91,3.005,92,2.11,147,0.043,148,0.043,149,0.043,150,0.043,151,0.043,152,0.043,407,3.782,408,3.782,409,3.782,410,3.782,411,4.471,412,3.782,413,3.782]],["title/index.html",[414,2.152,415,2.152,416,2.152]],["body/index.html",[1,1.005,9,1.175,16,1.673,19,1.673,21,1.673,27,1.094,29,1.388,33,1.246,36,0.058,40,1.673,41,1.696,42,2.846,43,1.005,47,2.716,50,1.673,51,2.352,55,1.864,56,2.004,57,1.673,61,2.004,62,1.673,63,2.415,67,1.673,69,2.004,70,1.673,71,1.673,77,2.004,78,1.071,92,1.175,102,1.696,103,1.696,104,1.388,105,1.673,106,2.004,147,0.024,148,0.024,149,0.024,150,0.024,151,0.024,152,0.024,171,1.451,184,1.673,185,3.43,188,1.673,189,2.835,191,1.673,193,1.673,195,1.673,198,1.673,200,1.673,202,1.673,205,1.673,207,1.673,208,1.673,239,1.673,340,1.696,349,1.673,357,1.673,375,1.673,384,1.673,393,2.835,417,2.106,418,2.106,419,2.106,420,2.106,421,3.568,422,2.106,423,2.106,424,2.106,425,3.568,426,2.106,427,2.106,428,2.106,429,2.106,430,3.04,431,2.106,432,3.908,433,2.106,434,2.106,435,2.106,436,2.106,437,3.04,438,3.04,439,2.106,440,2.106,441,3.04,442,2.106,443,2.106,444,2.106,445,2.106,446,3.568,447,2.106,448,2.106,449,2.106,450,2.106,451,2.106,452,3.04,453,2.106,454,2.106,455,2.106,456,2.106,457,2.106,458,2.106,459,2.106,460,2.106,461,2.106,462,3.568,463,2.106,464,2.106,465,2.106,466,2.106,467,2.106,468,2.106,469,2.106]],["title/modules.html",[470,3.496]],["body/modules.html",[36,0.052,147,0.045,148,0.045,149,0.052,150,0.045,151,0.045,152,0.045,340,2.202,341,3.136,471,3.948,472,3.948,473,3.948]],["title/overview.html",[474,3.496]],["body/overview.html",[2,2.093,36,0.05,147,0.043,148,0.043,149,0.043,150,0.043,151,0.043,152,0.043,154,1.321,260,2.98,302,2.98,333,2.98,339,2.98,356,2.98,406,2.98,475,3.751,476,3.751,477,3.751,478,3.751,479,3.751,480,3.751,481,3.751,482,3.751,483,3.751,484,3.751]],["title/miscellaneous/typealiases.html",[485,2.152,486,3.088]],["body/miscellaneous/typealiases.html",[7,0.682,36,0.057,38,0.438,41,2.494,55,1.805,147,0.043,148,0.043,149,0.043,150,0.043,151,0.043,152,0.043,487,3.782,488,3.782,489,3.782,490,3.782,491,3.782,492,3.782,493,3.782,494,3.782]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":247,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{}}}],["0/12",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":295,"title":{},"body":{"injectables/JwtService.html":{}}}],["1",{"_index":302,"title":{},"body":{"injectables/JwtService.html":{},"overview.html":{}}}],["1000",{"_index":250,"title":{},"body":{"injectables/JwtService.html":{}}}],["2",{"_index":286,"title":{},"body":{"injectables/JwtService.html":{}}}],["2.2.0",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":260,"title":{},"body":{"injectables/JwtService.html":{},"overview.html":{}}}],["4",{"_index":283,"title":{},"body":{"injectables/JwtService.html":{}}}],["6",{"_index":333,"title":{},"body":{"injectables/JwtService.html":{},"overview.html":{}}}],["6.4.0",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["63",{"_index":335,"title":{},"body":{"injectables/JwtService.html":{}}}],["64",{"_index":324,"title":{},"body":{"injectables/JwtService.html":{}}}],["8",{"_index":329,"title":{},"body":{"injectables/JwtService.html":{}}}],["8.2.5",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":299,"title":{},"body":{"injectables/JwtService.html":{}}}],["acceso",{"_index":452,"title":{},"body":{"index.html":{}}}],["access_token",{"_index":364,"title":{},"body":{"interfaces/ProviderToken.html":{}}}],["add",{"_index":321,"title":{},"body":{"injectables/JwtService.html":{}}}],["ahora",{"_index":459,"title":{},"body":{"index.html":{}}}],["al",{"_index":448,"title":{},"body":{"index.html":{}}}],["alejar",{"_index":483,"title":{},"body":{"overview.html":{}}}],["alias",{"_index":488,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["almacenar",{"_index":455,"title":{},"body":{"index.html":{}}}],["ampliar",{"_index":481,"title":{},"body":{"overview.html":{}}}],["angular/common",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["angular/core",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["api",{"_index":462,"title":{},"body":{"index.html":{}}}],["aplicación",{"_index":449,"title":{},"body":{"index.html":{}}}],["appear",{"_index":265,"title":{},"body":{"injectables/JwtService.html":{}}}],["aqu",{"_index":465,"title":{},"body":{"index.html":{}}}],["array.prototype.map",{"_index":292,"title":{},"body":{"injectables/JwtService.html":{}}}],["ascii",{"_index":322,"title":{},"body":{"injectables/JwtService.html":{}}}],["atob",{"_index":304,"title":{},"body":{"injectables/JwtService.html":{}}}],["autenticación",{"_index":432,"title":{},"body":{"index.html":{}}}],["auth",{"_index":375,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["auth.service",{"_index":382,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["authenticateprovider",{"_index":13,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticateprovider(provider",{"_index":40,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["authentication",{"_index":84,"title":{"interfaces/Authentication.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"coverage.html":{}}}],["authorization",{"_index":388,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["authservice",{"_index":1,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"index.html":{}}}],["authservicestrapi",{"_index":431,"title":{},"body":{"index.html":{}}}],["autorizado",{"_index":445,"title":{},"body":{"index.html":{}}}],["b64decode",{"_index":222,"title":{},"body":{"injectables/JwtService.html":{}}}],["b64decode(str",{"_index":229,"title":{},"body":{"injectables/JwtService.html":{}}}],["b64decodeunicode",{"_index":223,"title":{},"body":{"injectables/JwtService.html":{}}}],["b64decodeunicode(str",{"_index":232,"title":{},"body":{"injectables/JwtService.html":{}}}],["base64url",{"_index":289,"title":{},"body":{"injectables/JwtService.html":{}}}],["baseurl",{"_index":10,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"modules/NgStrapiModule.html":{}}}],["bc",{"_index":310,"title":{},"body":{"injectables/JwtService.html":{}}}],["bearer",{"_index":389,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["bit",{"_index":319,"title":{},"body":{"injectables/JwtService.html":{}}}],["bits",{"_index":330,"title":{},"body":{"injectables/JwtService.html":{}}}],["boolean",{"_index":61,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"index.html":{}}}],["bootstrap",{"_index":479,"title":{},"body":{"overview.html":{}}}],["break",{"_index":285,"title":{},"body":{"injectables/JwtService.html":{}}}],["bs",{"_index":311,"title":{},"body":{"injectables/JwtService.html":{}}}],["buffer",{"_index":312,"title":{},"body":{"injectables/JwtService.html":{}}}],["buscar",{"_index":461,"title":{},"body":{"index.html":{}}}],["c",{"_index":294,"title":{},"body":{"injectables/JwtService.html":{}}}],["c.charcodeat(0).tostring(16)).slice",{"_index":296,"title":{},"body":{"injectables/JwtService.html":{}}}],["call(this.b64decode(str",{"_index":293,"title":{},"body":{"injectables/JwtService.html":{}}}],["case",{"_index":284,"title":{},"body":{"injectables/JwtService.html":{}}}],["catch",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["character",{"_index":315,"title":{},"body":{"injectables/JwtService.html":{}}}],["characters",{"_index":327,"title":{},"body":{"injectables/JwtService.html":{}}}],["chars",{"_index":298,"title":{},"body":{"injectables/JwtService.html":{}}}],["chars.indexof(buffer",{"_index":336,"title":{},"body":{"injectables/JwtService.html":{}}}],["check",{"_index":266,"title":{},"body":{"injectables/JwtService.html":{}}}],["class",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["cleartoken",{"_index":14,"title":{},"body":{"injectables/AuthService.html":{}}}],["cobertura",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["code",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ProviderToken.html":{}}}],["coincidan",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["comesfromstorage",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{}}}],["complete",{"_index":453,"title":{},"body":{"index.html":{}}}],["con",{"_index":450,"title":{},"body":{"index.html":{}}}],["config",{"_index":359,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["const",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["constructor(@inject('baseurl",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["constructor(auth",{"_index":373,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["constructor(baseurl",{"_index":26,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["constructor(private",{"_index":384,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["contenttype",{"_index":197,"title":{},"body":{"injectables/HttpService.html":{}}}],["contenttypepluralized",{"_index":187,"title":{},"body":{"injectables/HttpService.html":{}}}],["convert",{"_index":328,"title":{},"body":{"injectables/JwtService.html":{}}}],["cookie",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/StoreConfig.html":{},"dependencies.html":{},"index.html":{}}}],["cookieconfig",{"_index":158,"title":{"interfaces/CookieConfig.html":{}},"body":{"interfaces/CookieConfig.html":{},"interfaces/StoreConfig.html":{},"coverage.html":{}}}],["cookies",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{}}}],["cookies.get(this.storeconfig.cookie.key",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{}}}],["cookies.remove",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["cookies.set",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["correctly",{"_index":306,"title":{},"body":{"injectables/JwtService.html":{}}}],["counters",{"_index":309,"title":{},"body":{"injectables/JwtService.html":{}}}],["coverage",{"_index":391,"title":{"coverage.html":{}},"body":{}}],["createdat",{"_index":162,"title":{},"body":{"interfaces/File.html":{}}}],["createentry",{"_index":173,"title":{},"body":{"injectables/HttpService.html":{}}}],["createentry(contenttypepluralized",{"_index":184,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["data",{"_index":69,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["date",{"_index":238,"title":{},"body":{"injectables/JwtService.html":{}}}],["date().valueof",{"_index":249,"title":{},"body":{"injectables/JwtService.html":{}}}],["date(0",{"_index":254,"title":{},"body":{"injectables/JwtService.html":{}}}],["date.setutcseconds(decoded.exp",{"_index":255,"title":{},"body":{"injectables/JwtService.html":{}}}],["date.valueof",{"_index":248,"title":{},"body":{"injectables/JwtService.html":{}}}],["datos",{"_index":468,"title":{},"body":{"index.html":{}}}],["de",{"_index":55,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["declaraciones",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["declarations",{"_index":478,"title":{},"body":{"overview.html":{}}}],["decode",{"_index":275,"title":{},"body":{"injectables/JwtService.html":{}}}],["decoded",{"_index":251,"title":{},"body":{"injectables/JwtService.html":{}}}],["decoded.hasownproperty('exp",{"_index":253,"title":{},"body":{"injectables/JwtService.html":{}}}],["decodetoken",{"_index":224,"title":{},"body":{"injectables/JwtService.html":{}}}],["decodetoken(token",{"_index":234,"title":{},"body":{"injectables/JwtService.html":{}}}],["decodeuricomponent",{"_index":291,"title":{},"body":{"injectables/JwtService.html":{}}}],["default",{"_index":287,"title":{},"body":{"injectables/JwtService.html":{}}}],["definido",{"_index":32,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["del",{"_index":440,"title":{},"body":{"index.html":{}}}],["deleteentry",{"_index":174,"title":{},"body":{"injectables/HttpService.html":{}}}],["deleteentry(contenttypepluralized",{"_index":188,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["dependencias",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["dependencies",{"_index":406,"title":{"dependencies.html":{}},"body":{"overview.html":{}}}],["descripción",{"_index":475,"title":{},"body":{"overview.html":{}}}],["devuelve",{"_index":46,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["disponible",{"_index":472,"title":{},"body":{"modules.html":{}}}],["documentación",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["doesn\\'t",{"_index":264,"title":{},"body":{"injectables/JwtService.html":{}}}],["e",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["each",{"_index":326,"title":{},"body":{"injectables/JwtService.html":{}}}],["el",{"_index":446,"title":{},"body":{"index.html":{}}}],["email",{"_index":53,"title":{},"body":{"injectables/AuthService.html":{}}}],["en",{"_index":33,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["encoded",{"_index":307,"title":{},"body":{"injectables/JwtService.html":{}}}],["entre",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["error",{"_index":303,"title":{},"body":{"injectables/JwtService.html":{}}}],["error('cannot",{"_index":274,"title":{},"body":{"injectables/JwtService.html":{}}}],["error('the",{"_index":262,"title":{},"body":{"injectables/JwtService.html":{}}}],["existingtoken",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{}}}],["exports",{"_index":480,"title":{},"body":{"overview.html":{}}}],["ext",{"_index":163,"title":{},"body":{"interfaces/File.html":{}}}],["facebook",{"_index":491,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["failed",{"_index":305,"title":{},"body":{"injectables/JwtService.html":{}}}],["false",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/StoreConfig.html":{}}}],["fichero",{"_index":5,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["file",{"_index":160,"title":{"interfaces/File.html":{}},"body":{"interfaces/File.html":{},"injectables/HttpService.html":{},"coverage.html":{}}}],["find",{"_index":334,"title":{},"body":{"injectables/JwtService.html":{}}}],["first",{"_index":325,"title":{},"body":{"injectables/JwtService.html":{}}}],["forgotpassword",{"_index":15,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword(email",{"_index":50,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["formdata",{"_index":208,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["forroot",{"_index":345,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["forroot(baseurl",{"_index":346,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["found",{"_index":317,"title":{},"body":{"injectables/JwtService.html":{}}}],["g",{"_index":279,"title":{},"body":{"injectables/JwtService.html":{}}}],["general",{"_index":476,"title":{},"body":{"overview.html":{}}}],["getcurrentuser",{"_index":16,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["getentries",{"_index":175,"title":{},"body":{"injectables/HttpService.html":{}}}],["getentries(contenttypepluralized",{"_index":191,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["getentry",{"_index":176,"title":{},"body":{"injectables/HttpService.html":{}}}],["getentry(contenttypepluralized",{"_index":193,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["getentrycount",{"_index":177,"title":{},"body":{"injectables/HttpService.html":{}}}],["getentrycount(contenttype",{"_index":195,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["getfile",{"_index":178,"title":{},"body":{"injectables/HttpService.html":{}}}],["getfile(id",{"_index":198,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["getfiles",{"_index":179,"title":{},"body":{"injectables/HttpService.html":{}}}],["getfiles(params",{"_index":200,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["getproviderauthenticationurl",{"_index":17,"title":{},"body":{"injectables/AuthService.html":{}}}],["getproviderauthenticationurl(provider",{"_index":57,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["getting",{"_index":414,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":18,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokenexpirationdate",{"_index":225,"title":{},"body":{"injectables/JwtService.html":{}}}],["gettokenexpirationdate(token",{"_index":236,"title":{},"body":{"injectables/JwtService.html":{}}}],["github",{"_index":493,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["google",{"_index":492,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["gráfica",{"_index":471,"title":{},"body":{"modules.html":{}}}],["hash",{"_index":164,"title":{},"body":{"interfaces/File.html":{}}}],["hay",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["headers",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers.append('access_token",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers.append('code",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers.append('oauth_token",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["http",{"_index":29,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["http://localhost:1337",{"_index":427,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":355,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["httpclient",{"_index":30,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["httpclientmodule",{"_index":354,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["httpevent",{"_index":380,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httphandler",{"_index":378,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httpheaders",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpinterceptor",{"_index":381,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httpparams",{"_index":185,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["httprequest",{"_index":377,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["https://jwt.io",{"_index":271,"title":{},"body":{"injectables/JwtService.html":{}}}],["httpservice",{"_index":171,"title":{"injectables/HttpService.html":{}},"body":{"injectables/HttpService.html":{},"modules/NgStrapiModule.html":{},"coverage.html":{},"index.html":{}}}],["id",{"_index":189,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["identificador",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["identifier",{"_index":65,"title":{},"body":{"injectables/AuthService.html":{}}}],["idx",{"_index":313,"title":{},"body":{"injectables/JwtService.html":{}}}],["if(token",{"_index":256,"title":{},"body":{"injectables/JwtService.html":{}}}],["illegal",{"_index":288,"title":{},"body":{"injectables/JwtService.html":{}}}],["implements",{"_index":383,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["import",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["importar",{"_index":423,"title":{},"body":{"index.html":{}}}],["imports",{"_index":357,"title":{},"body":{"modules/NgStrapiModule.html":{},"index.html":{}}}],["index",{"_index":416,"title":{"index.html":{}},"body":{}}],["info",{"_index":3,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{}}}],["initialize",{"_index":308,"title":{},"body":{"injectables/JwtService.html":{}}}],["inject",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["inject('config",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["inspected",{"_index":263,"title":{},"body":{"injectables/JwtService.html":{}}}],["instalar",{"_index":418,"title":{},"body":{"index.html":{}}}],["install",{"_index":420,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":372,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercept(request",{"_index":376,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor",{"_index":368,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":352,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["interceptor.service.ts",{"_index":371,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:13",{"_index":379,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:9",{"_index":374,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptores",{"_index":369,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interface",{"_index":153,"title":{"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{}},"body":{"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":154,"title":{},"body":{"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"overview.html":{}}}],["inyectables",{"_index":2,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"overview.html":{}}}],["isauthenticated",{"_index":19,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["istokenexpired",{"_index":226,"title":{},"body":{"injectables/JwtService.html":{}}}],["istokenexpired(token",{"_index":240,"title":{},"body":{"injectables/JwtService.html":{}}}],["join",{"_index":297,"title":{},"body":{"injectables/JwtService.html":{}}}],["js",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["json.parse(decoded",{"_index":276,"title":{},"body":{"injectables/JwtService.html":{}}}],["json.parse(window.localstorage.getitem",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(token",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"injectables/JwtService.html":{},"index.html":{}}}],["jwt.service",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtservice",{"_index":31,"title":{"injectables/JwtService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"coverage.html":{}}}],["key",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"interfaces/LocalStorageConfig.html":{},"index.html":{}}}],["la",{"_index":393,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["legend",{"_index":477,"title":{},"body":{"overview.html":{}}}],["local",{"_index":433,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/StoreConfig.html":{},"index.html":{}}}],["localstorageconfig",{"_index":337,"title":{"interfaces/LocalStorageConfig.html":{}},"body":{"interfaces/LocalStorageConfig.html":{},"interfaces/StoreConfig.html":{},"coverage.html":{}}}],["login",{"_index":20,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(identifier",{"_index":62,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["logout",{"_index":21,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["make",{"_index":267,"title":{},"body":{"injectables/JwtService.html":{}}}],["matching",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["mime",{"_index":165,"title":{},"body":{"interfaces/File.html":{}}}],["miscellaneous",{"_index":485,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["miscelánea",{"_index":487,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["models/authentication",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/file",{"_index":210,"title":{},"body":{"injectables/HttpService.html":{}}}],["models/provider",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/providertoken",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/storeconfig",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{},"modules/NgStrapiModule.html":{}}}],["module",{"_index":339,"title":{"modules/NgStrapiModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":470,"title":{"modules.html":{}},"body":{}}],["modulewithproviders",{"_index":348,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["modulo",{"_index":424,"title":{},"body":{"index.html":{}}}],["more",{"_index":272,"title":{},"body":{"injectables/JwtService.html":{}}}],["multi",{"_index":362,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["métodos",{"_index":11,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["módulo",{"_index":484,"title":{},"body":{"overview.html":{}}}],["módulos",{"_index":341,"title":{},"body":{"modules/NgStrapiModule.html":{},"modules.html":{}}}],["name",{"_index":166,"title":{},"body":{"interfaces/File.html":{}}}],["navegar",{"_index":473,"title":{},"body":{"modules.html":{}}}],["ndice",{"_index":7,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"miscellaneous/typealiases.html":{}}}],["new",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"coverage.html":{}}}],["next",{"_index":314,"title":{},"body":{"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["next.handle(request",{"_index":390,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["ng",{"_index":421,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":349,"title":{},"body":{"modules/NgStrapiModule.html":{},"index.html":{}}}],["ngstrapi",{"_index":417,"title":{},"body":{"index.html":{}}}],["ngstrapimodule",{"_index":340,"title":{"modules/NgStrapiModule.html":{}},"body":{"modules/NgStrapiModule.html":{},"index.html":{},"modules.html":{}}}],["ngstrapimodule.forroot",{"_index":426,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":37,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["npm",{"_index":419,"title":{},"body":{"index.html":{}}}],["null",{"_index":239,"title":{},"body":{"injectables/JwtService.html":{},"index.html":{}}}],["number",{"_index":242,"title":{},"body":{"injectables/JwtService.html":{}}}],["oauth_token",{"_index":365,"title":{},"body":{"interfaces/ProviderToken.html":{}}}],["object",{"_index":157,"title":{},"body":{"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{}}}],["observable",{"_index":47,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["observablehttp",{"_index":469,"title":{},"body":{"index.html":{}}}],["offsetseconds",{"_index":241,"title":{},"body":{"injectables/JwtService.html":{}}}],["one",{"_index":331,"title":{},"body":{"injectables/JwtService.html":{}}}],["opcional",{"_index":39,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{}}}],["options",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CookieConfig.html":{},"index.html":{}}}],["output",{"_index":277,"title":{},"body":{"injectables/JwtService.html":{}}}],["output.length",{"_index":282,"title":{},"body":{"injectables/JwtService.html":{}}}],["overview",{"_index":474,"title":{"overview.html":{}},"body":{}}],["package",{"_index":405,"title":{"dependencies.html":{}},"body":{}}],["params",{"_index":42,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["params.access_token",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["params.code",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["params.oauth_token",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["pares",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["parts",{"_index":257,"title":{},"body":{"injectables/JwtService.html":{}}}],["parts.length",{"_index":259,"title":{},"body":{"injectables/JwtService.html":{}}}],["parámetros",{"_index":35,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["password",{"_index":63,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["password);providers",{"_index":435,"title":{},"body":{"index.html":{}}}],["passwordconfirmation",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["path",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["por",{"_index":456,"title":{},"body":{"index.html":{}}}],["privadas",{"_index":463,"title":{},"body":{"index.html":{}}}],["private",{"_index":9,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"index.html":{}}}],["propiedades",{"_index":8,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"interfaces/LocalStorageConfig.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{}}}],["proveedor",{"_index":441,"title":{},"body":{"index.html":{}}}],["provide",{"_index":358,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["providedin",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["provider",{"_index":41,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/File.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["providers",{"_index":356,"title":{},"body":{"modules/NgStrapiModule.html":{},"overview.html":{}}}],["providertoken",{"_index":43,"title":{"interfaces/ProviderToken.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ProviderToken.html":{},"coverage.html":{},"index.html":{}}}],["public",{"_index":12,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{}}}],["puede",{"_index":460,"title":{},"body":{"index.html":{}}}],["página",{"_index":439,"title":{},"body":{"index.html":{}}}],["que",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["query",{"_index":204,"title":{},"body":{"injectables/HttpService.html":{}}}],["readonly",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["recomienda",{"_index":429,"title":{},"body":{"index.html":{}}}],["redirigir",{"_index":447,"title":{},"body":{"index.html":{}}}],["redirija",{"_index":436,"title":{},"body":{"index.html":{}}}],["register",{"_index":22,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(data",{"_index":67,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["related",{"_index":167,"title":{},"body":{"interfaces/File.html":{}}}],["replace(/_/g",{"_index":280,"title":{},"body":{"injectables/JwtService.html":{}}}],["request",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["request.clone",{"_index":386,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["resetpassword",{"_index":23,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(code",{"_index":70,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["restablecer",{"_index":482,"title":{},"body":{"overview.html":{}}}],["result",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["resultados",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{}}}],["root",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["rxjs",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["sdk",{"_index":454,"title":{},"body":{"index.html":{}}}],["se",{"_index":428,"title":{},"body":{"index.html":{}}}],["searchfiles",{"_index":180,"title":{},"body":{"injectables/HttpService.html":{}}}],["searchfiles(query",{"_index":202,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["see",{"_index":270,"title":{},"body":{"injectables/JwtService.html":{}}}],["services/http.service",{"_index":353,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["services/token",{"_index":351,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["setheaders",{"_index":387,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["settoken",{"_index":24,"title":{},"body":{"injectables/AuthService.html":{}}}],["settoken(token",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{}}}],["sha256",{"_index":168,"title":{},"body":{"interfaces/File.html":{}}}],["si",{"_index":45,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{}}}],["size",{"_index":169,"title":{},"body":{"interfaces/File.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{}}}],["src/.../provider.ts",{"_index":489,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/models/authentication.ts",{"_index":155,"title":{},"body":{"interfaces/Authentication.html":{},"coverage.html":{}}}],["src/lib/models/cookieconfig.ts",{"_index":159,"title":{},"body":{"interfaces/CookieConfig.html":{},"coverage.html":{}}}],["src/lib/models/file.ts",{"_index":161,"title":{},"body":{"interfaces/File.html":{},"coverage.html":{}}}],["src/lib/models/localstorageconfig.ts",{"_index":338,"title":{},"body":{"interfaces/LocalStorageConfig.html":{},"coverage.html":{}}}],["src/lib/models/provider.ts",{"_index":490,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/models/providertoken.ts",{"_index":363,"title":{},"body":{"interfaces/ProviderToken.html":{},"coverage.html":{}}}],["src/lib/models/storeconfig.ts",{"_index":366,"title":{},"body":{"interfaces/StoreConfig.html":{},"coverage.html":{}}}],["src/lib/ng",{"_index":342,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["src/lib/services/auth.service.ts",{"_index":6,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/lib/services/auth.service.ts:102",{"_index":52,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:112",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:127",{"_index":58,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:131",{"_index":44,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:151",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:169",{"_index":48,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:19",{"_index":34,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:41",{"_index":59,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:54",{"_index":68,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:65",{"_index":64,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:84",{"_index":54,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:89",{"_index":60,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/auth.service.ts:93",{"_index":66,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/lib/services/http.service.ts",{"_index":172,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/lib/services/http.service.ts:12",{"_index":183,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:18",{"_index":192,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:24",{"_index":196,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:30",{"_index":194,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:34",{"_index":186,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:43",{"_index":206,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:49",{"_index":190,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:53",{"_index":203,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:57",{"_index":201,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:63",{"_index":199,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/http.service.ts:67",{"_index":209,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/lib/services/jwt.service.ts",{"_index":221,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{}}}],["src/lib/services/jwt.service.ts:10",{"_index":243,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/jwt.service.ts:24",{"_index":237,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/jwt.service.ts:38",{"_index":235,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/jwt.service.ts:57",{"_index":245,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/jwt.service.ts:6",{"_index":228,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/jwt.service.ts:78",{"_index":233,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/jwt.service.ts:88",{"_index":230,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/lib/services/token",{"_index":370,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["started",{"_index":415,"title":{"index.html":{}},"body":{}}],["static",{"_index":344,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["storage",{"_index":320,"title":{},"body":{"injectables/JwtService.html":{}}}],["storeconfig",{"_index":28,"title":{"interfaces/StoreConfig.html":{}},"body":{"injectables/AuthService.html":{},"modules/NgStrapiModule.html":{},"interfaces/StoreConfig.html":{},"coverage.html":{}}}],["str",{"_index":231,"title":{},"body":{"injectables/JwtService.html":{}}}],["str.charat(idx",{"_index":316,"title":{},"body":{"injectables/JwtService.html":{}}}],["str.length",{"_index":301,"title":{},"body":{"injectables/JwtService.html":{}}}],["str.replace",{"_index":278,"title":{},"body":{"injectables/JwtService.html":{}}}],["strapi",{"_index":425,"title":{},"body":{"index.html":{}}}],["strapi.module.ts",{"_index":343,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["strapi.module.ts:15",{"_index":347,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["strapiimportar",{"_index":422,"title":{},"body":{"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"index.html":{}}}],["string(str).replace",{"_index":300,"title":{},"body":{"injectables/JwtService.html":{}}}],["string.fromcharcode(255",{"_index":332,"title":{},"body":{"injectables/JwtService.html":{}}}],["su",{"_index":437,"title":{},"body":{"index.html":{}}}],["sure",{"_index":268,"title":{},"body":{"injectables/JwtService.html":{}}}],["sus",{"_index":467,"title":{},"body":{"index.html":{}}}],["switch",{"_index":281,"title":{},"body":{"injectables/JwtService.html":{}}}],["t",{"_index":56,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["table",{"_index":318,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["this.auth.authenticateprovider('facebook');datos",{"_index":458,"title":{},"body":{"index.html":{}}}],["this.auth.getproviderauthenticationurl('facebook');una",{"_index":443,"title":{},"body":{"index.html":{}}}],["this.auth.gettoken",{"_index":385,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["this.auth.login(username",{"_index":434,"title":{},"body":{"index.html":{}}}],["this.b64decodeunicode(output",{"_index":290,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.baseurl",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["this.baseurl}/connect/${provider",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cleartoken",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.decodetoken(token",{"_index":252,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.gettoken",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettokenexpirationdate(token",{"_index":246,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.http.delete(`${this.baseurl}/${contenttypepluralized}/${id",{"_index":216,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/${contenttypepluralized",{"_index":211,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/${contenttypepluralized}/${id",{"_index":213,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/${contenttype}/count",{"_index":212,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/auth/${provider}/callback",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(`${this.baseurl}/upload/files",{"_index":218,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/upload/files/${id",{"_index":219,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/upload/search/${decodeuricomponent(query",{"_index":217,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${this.baseurl}/users/me",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.getentries('users').subscribe(users",{"_index":464,"title":{},"body":{"index.html":{}}}],["this.http.post(`${this.baseurl}/${contenttypepluralized",{"_index":214,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.post(`${this.baseurl}/auth/local",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.baseurl}/auth/local/register",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.baseurl}/auth/reset",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(`${this.baseurl}/upload",{"_index":220,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.put(`${this.baseurl}/${contenttypepluralized}/${id",{"_index":215,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.jwtservice.istokenexpired(this.gettoken",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.settoken(jwt.jwt",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeconfig",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeconfig.cookie",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeconfig.cookie.key",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeconfig.cookie.options",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeconfig.localstorage",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storeconfig.localstorage.key",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.urlbase64decode(parts[1",{"_index":273,"title":{},"body":{"injectables/JwtService.html":{}}}],["three",{"_index":269,"title":{},"body":{"injectables/JwtService.html":{}}}],["throw",{"_index":261,"title":{},"body":{"injectables/JwtService.html":{}}}],["tipo",{"_index":38,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Authentication.html":{},"interfaces/CookieConfig.html":{},"interfaces/File.html":{},"injectables/HttpService.html":{},"injectables/JwtService.html":{},"interfaces/LocalStorageConfig.html":{},"modules/NgStrapiModule.html":{},"interfaces/ProviderToken.html":{},"interfaces/StoreConfig.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["token",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"index.html":{}}}],["token.split",{"_index":258,"title":{},"body":{"injectables/JwtService.html":{}}}],["token.subscribe(jwt",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokeninterceptorservice",{"_index":350,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"modules/NgStrapiModule.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["trate",{"_index":466,"title":{},"body":{"index.html":{}}}],["true",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"modules/NgStrapiModule.html":{}}}],["try",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{}}}],["twitter",{"_index":494,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":486,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["un",{"_index":451,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":367,"title":{},"body":{"interfaces/StoreConfig.html":{}}}],["updatedat",{"_index":170,"title":{},"body":{"interfaces/File.html":{}}}],["updateentry",{"_index":181,"title":{},"body":{"injectables/HttpService.html":{}}}],["updateentry(contenttypepluralized",{"_index":205,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["upload",{"_index":182,"title":{},"body":{"injectables/HttpService.html":{}}}],["upload(data",{"_index":207,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["url",{"_index":51,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/File.html":{},"index.html":{}}}],["urlbase64decode",{"_index":227,"title":{},"body":{"injectables/JwtService.html":{}}}],["urlbase64decode(str",{"_index":244,"title":{},"body":{"injectables/JwtService.html":{}}}],["usar",{"_index":430,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":361,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["user",{"_index":156,"title":{},"body":{"interfaces/Authentication.html":{}}}],["usevalue",{"_index":360,"title":{},"body":{"modules/NgStrapiModule.html":{}}}],["usted",{"_index":457,"title":{},"body":{"index.html":{}}}],["usuario",{"_index":438,"title":{},"body":{"index.html":{}}}],["value",{"_index":323,"title":{},"body":{"injectables/JwtService.html":{}}}],["vez",{"_index":444,"title":{},"body":{"index.html":{}}}],["void",{"_index":49,"title":{},"body":{"injectables/AuthService.html":{}}}],["window.localstorage.removeitem(this.storeconfig.localstorage.key",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["window.localstorage.setitem",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["window.location",{"_index":442,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/services/auth.service.ts\n        \n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authenticateProvider\n                            \n                            \n                                    Private\n                                clearToken\n                            \n                            \n                                    Public\n                                forgotPassword\n                            \n                            \n                                    Public\n                                getCurrentUser\n                            \n                            \n                                    Public\n                                getProviderAuthenticationUrl\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                resetPassword\n                            \n                            \n                                    Private\n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(baseUrl: string, storeConfig: StoreConfig, http: HttpClient, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Definido en src/lib/services/auth.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storeConfig\n                                                  \n                                                        \n                                                                        StoreConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            authenticateProvider\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    authenticateProvider(provider: Provider, params?: ProviderToken)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                Provider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ProviderToken\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearToken()\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(email: string, url: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrentUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser()\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:84\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Devuelve :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProviderAuthenticationUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProviderAuthenticationUrl(provider: Provider)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                Provider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getToken()\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthenticated()\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(identifier: string, password: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Devuelve :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: any)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(code: string, password: string, passwordConfirmation: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwordConfirmation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setToken(token: string, comesFromStorage?: boolean)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/auth.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    comesFromStorage\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                        \n                            \n                                    Definido en src/lib/services/auth.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { JwtService } from './jwt.service';\n\nimport { Authentication } from '../models/authentication';\nimport { StoreConfig } from '../models/storeConfig';\nimport { Provider } from '../models/provider';\nimport { ProviderToken } from '../models/providerToken';\n\nimport { Observable } from 'rxjs';\nimport * as Cookies from 'js-cookie';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private baseUrl: string;\n\n  constructor(@Inject('baseUrl') baseUrl: string, @Inject('config') private storeConfig: StoreConfig, private readonly http: HttpClient,\n              private jwtService: JwtService) {\n\n    this.baseUrl = baseUrl;\n\n    this.storeConfig = {\n      cookie: {\n        key: 'jwt',\n        options: {\n          path: '/'\n        }\n      },\n      localStorage: {\n        key: 'jwt'\n      },\n      ...storeConfig\n    };\n    this.getToken();\n  }\n\n  public getToken() {\n    let existingToken: string;\n\n    if (this.storeConfig.cookie) {\n      existingToken = Cookies.get(this.storeConfig.cookie.key);\n    } else if (this.storeConfig.localStorage) {\n      existingToken = JSON.parse(window.localStorage.getItem(\n        this.storeConfig.localStorage.key\n      ) as string);\n    }\n    return existingToken;\n  }\n\n  public register(data: any): Observable {\n    this.clearToken();\n    const authentication = this.http.post(`${this.baseUrl}/auth/local/register`, data);\n\n    const token = authentication;\n    token.subscribe(jwt => {\n      this.setToken(jwt.jwt);\n    });\n    return authentication;\n  }\n\n  public login(identifier: string, password: string): Observable {\n\n    this.clearToken();\n\n    const authentication = this.http.post(`${this.baseUrl}/auth/local`, {\n      identifier,\n      password\n    });\n\n    const token = authentication;\n\n    token.subscribe(jwt => {\n      this.setToken(jwt.jwt);\n    });\n\n    return authentication;\n\n  }\n\n  public getCurrentUser(): Observable {\n    return this.http.get(`${this.baseUrl}/users/me`);\n  }\n\n\n  public isAuthenticated(): boolean {\n    return !this.jwtService.isTokenExpired(this.getToken());\n  }\n\n  public logout(): boolean {\n    try {\n      this.clearToken();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  public forgotPassword(email: string, url: string) {\n    this.clearToken();\n    const request = this.http.post(`${this.baseUrl}/auth/local`, {\n      email,\n      url\n    });\n\n    return request;\n  }\n\n  public resetPassword(\n    code: string,\n    password: string,\n    passwordConfirmation: string\n  ) {\n    this.clearToken();\n    const request = this.http.post(`${this.baseUrl}/auth/reset-password`, {\n      code,\n      password,\n      passwordConfirmation\n    });\n\n    return request;\n  }\n\n  public getProviderAuthenticationUrl(provider: Provider): string {\n    return `${this.baseUrl}/connect/${provider}`;\n  }\n\n  public authenticateProvider(provider: Provider, params?: ProviderToken): Observable {\n    this.clearToken();\n    const headers = new HttpHeaders();\n    headers.append('access_token', params.access_token);\n    headers.append('code', params.code);\n    headers.append('oauth_token', params.oauth_token);\n\n    const authentication = this.http.get(`${this.baseUrl}/auth/${provider}/callback`, {\n      headers\n    });\n\n    const token = authentication;\n    token.subscribe(jwt => {\n      this.setToken(jwt.jwt);\n    });\n\n    return authentication;\n  }\n\n\n  private setToken(token: string, comesFromStorage?: boolean): void {\n    if (!comesFromStorage) {\n      if (this.storeConfig.localStorage) {\n        window.localStorage.setItem(\n          this.storeConfig.localStorage.key,\n          JSON.stringify(token)\n        );\n      }\n      if (this.storeConfig.cookie) {\n        Cookies.set(\n          this.storeConfig.cookie.key,\n          token,\n          this.storeConfig.cookie.options\n        );\n      }\n    }\n  }\n\n  private clearToken(): void {\n    if (this.storeConfig.localStorage) {\n      window.localStorage.removeItem(this.storeConfig.localStorage.key);\n    }\n    if (this.storeConfig.cookie) {\n      Cookies.remove(\n        this.storeConfig.cookie.key,\n        this.storeConfig.cookie.options\n      );\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/Authentication.html":{"url":"interfaces/Authentication.html","title":"interface - Authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Authentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/models/authentication.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwt\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Authentication {\n  user: object;\n  jwt: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/CookieConfig.html":{"url":"interfaces/CookieConfig.html","title":"interface - CookieConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CookieConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/models/cookieConfig.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CookieConfig {\n  key: string;\n  options: object;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/models/file.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        ext\n                                \n                                \n                                        hash\n                                \n                                \n                                        mime\n                                \n                                \n                                        name\n                                \n                                \n                                        provider\n                                \n                                \n                                        related\n                                \n                                \n                                        sha256\n                                \n                                \n                                        size\n                                \n                                \n                                        updatedAt\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        related\n                                    \n                                \n                                \n                                    \n                                        related:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sha256\n                                    \n                                \n                                \n                                    \n                                        sha256:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface File {\n  name: string;\n  sha256: string;\n  hash: string;\n  ext: string;\n  size: string;\n  mime: string;\n  url: string;\n  provider: string;\n  updatedAt: string;\n  createdAt: string;\n  related: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/services/http.service.ts\n        \n\n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createEntry\n                            \n                            \n                                    Public\n                                deleteEntry\n                            \n                            \n                                    Public\n                                getEntries\n                            \n                            \n                                    Public\n                                getEntry\n                            \n                            \n                                    Public\n                                getEntryCount\n                            \n                            \n                                    Public\n                                getFile\n                            \n                            \n                                    Public\n                                getFiles\n                            \n                            \n                                    Public\n                                searchFiles\n                            \n                            \n                                    Public\n                                updateEntry\n                            \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(baseUrl: string, http: HttpClient)\n                    \n                \n                        \n                            \n                                Definido en src/lib/services/http.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEntry(contentTypePluralized: string, data: T, params?: HttpParams)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:34\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    contentTypePluralized\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteEntry(contentTypePluralized: string, id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:49\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    contentTypePluralized\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEntries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntries(contentTypePluralized: string, params?: HttpParams)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:18\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    contentTypePluralized\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntry(contentTypePluralized: string, id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:30\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    contentTypePluralized\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEntryCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntryCount(contentType: string, params?: HttpParams)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFile(id: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFiles(params?: HttpParams)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            searchFiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchFiles(query: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateEntry\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEntry(contentTypePluralized: string, id: string, data: T, params?: HttpParams)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:43\n                \n            \n\n            \n                \n                    Parámetros de tipo :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    contentTypePluralized\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(data: FormData, params?: HttpParams)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/http.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            FormData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                        \n                            \n                                    Definido en src/lib/services/http.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { File } from '../models/file';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  private baseUrl: string;\n\n  constructor(@Inject('baseUrl') baseUrl: string, private readonly http: HttpClient) {\n    this.baseUrl = baseUrl;\n  }\n\n  public getEntries(contentTypePluralized: string, params?: HttpParams): Observable {\n    return this.http.get(`${this.baseUrl}/${contentTypePluralized}`, {\n      params\n    });\n  }\n\n  public getEntryCount(contentType: string, params?: HttpParams): Observable {\n    return this.http.get(`${this.baseUrl}/${contentType}/count`, {\n      params\n    });\n  }\n\n  public getEntry(contentTypePluralized: string, id: string): Observable {\n    return this.http.get(`${this.baseUrl}/${contentTypePluralized}/${id}`);\n  }\n\n  public createEntry(contentTypePluralized: string, data: T, params?: HttpParams): Observable {\n    return this.http.post(`${this.baseUrl}/${contentTypePluralized}`,\n      data,\n      {\n        params\n      }\n    );\n  }\n\n  public updateEntry(contentTypePluralized: string, id: string, data: T, params?: HttpParams): Observable {\n    return this.http.put(`${this.baseUrl}/${contentTypePluralized}/${id}`, data, {\n      params\n    });\n  }\n\n  public deleteEntry(contentTypePluralized: string, id: string): Observable {\n    return this.http.delete(`${this.baseUrl}/${contentTypePluralized}/${id}`);\n  }\n\n  public searchFiles(query: string): Observable {\n    return this.http.get(`${this.baseUrl}/upload/search/${decodeURIComponent(query)}`);\n  }\n\n  public getFiles(params?: HttpParams): Observable {\n    return this.http.get(`${this.baseUrl}/upload/files`, {\n      params\n    });\n  }\n\n  public getFile(id: string): Observable {\n    return this.http.get(`${this.baseUrl}/upload/files/${id}`);\n  }\n\n  public upload(data: FormData, params?: HttpParams): Observable {\n    return this.http.post(`${this.baseUrl}/upload`, data, {\n        params\n      });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/services/jwt.service.ts\n        \n\n\n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b64decode\n                            \n                            \n                                    Private\n                                b64DecodeUnicode\n                            \n                            \n                                    Private\n                                decodeToken\n                            \n                            \n                                    Private\n                                getTokenExpirationDate\n                            \n                            \n                                    Public\n                                isTokenExpired\n                            \n                            \n                                    Private\n                                urlBase64Decode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/lib/services/jwt.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            b64decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    b64decode(str: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/jwt.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            b64DecodeUnicode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    b64DecodeUnicode(str: any)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/jwt.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            decodeToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    decodeToken(token: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/jwt.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTokenExpirationDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTokenExpirationDate(token: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/jwt.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Date | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTokenExpired\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTokenExpired(token: string, offsetSeconds?: number)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/jwt.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offsetSeconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            urlBase64Decode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    urlBase64Decode(str: string)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/jwt.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtService {\n\n  constructor() { }\n\n  public isTokenExpired(token: string, offsetSeconds?: number): boolean {\n    if (token == null || token === '') {\n        return true;\n    }\n    const date = this.getTokenExpirationDate(token);\n    offsetSeconds = offsetSeconds || 0;\n\n    if (date === null) {\n      return false;\n    }\n\n    return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\n  }\n\n  private getTokenExpirationDate(token: string): Date | null {\n    let decoded: any;\n    decoded = this.decodeToken(token);\n\n    if (!decoded || !decoded.hasOwnProperty('exp')) {\n      return null;\n    }\n\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n\n    return date;\n  }\n\n  private decodeToken(token: string): any {\n    if(token == null || token === '') {\n      return null;\n    }\n\n    const parts = token.split('.');\n\n    if (parts.length !== 3) {\n      throw new Error('The inspected token doesn\\'t appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.');\n    }\n\n    const decoded = this.urlBase64Decode(parts[1]);\n    if (!decoded) {\n      throw new Error('Cannot decode the token.');\n    }\n\n    return JSON.parse(decoded);\n  }\n\n  private urlBase64Decode(str: string): string {\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\n    switch (output.length % 4) {\n      case 0: {\n        break;\n      }\n      case 2: {\n        output += '==';\n        break;\n      }\n      case 3: {\n        output += '=';\n        break;\n      }\n      default: {\n        throw 'Illegal base64url string!';\n      }\n    }\n    return this.b64DecodeUnicode(output);\n  }\n\n  private b64DecodeUnicode(str: any) {\n    return decodeURIComponent(\n      Array.prototype.map\n        .call(this.b64decode(str), (c: any) => {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        })\n        .join('')\n    );\n  }\n\n  private b64decode(str: string): string {\n    const chars =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let output = '';\n\n    str = String(str).replace(/=+$/, '');\n\n    if (str.length % 4 === 1) {\n      throw new Error(\n        '\\'atob\\' failed: The string to be decoded is not correctly encoded.'\n      );\n    }\n\n    for (\n      // initialize result and counters\n      let bc = 0, bs: any, buffer: any, idx = 0;\n      // get next character\n      (buffer = str.charAt(idx++));\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer &&\n      (\n        (bs = bc % 4 ? bs * 64 + buffer : buffer),\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4\n      )\n        ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\n        : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/LocalStorageConfig.html":{"url":"interfaces/LocalStorageConfig.html","title":"interface - LocalStorageConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalStorageConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/models/localStorageConfig.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LocalStorageConfig {\n  key: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/NgStrapiModule.html":{"url":"modules/NgStrapiModule.html","title":"module - NgStrapiModule","body":"\n                   \n\n\n\n\n    Módulos\n    NgStrapiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/lib/ng-strapi.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(baseUrl: string, storeConfig?: StoreConfig)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/ng-strapi.module.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    storeConfig\n                                    \n                                                StoreConfig\n                                    \n\n                                    \n                                        Si\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { HttpService } from './services/http.service';\nimport { StoreConfig } from './models/storeConfig';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n@NgModule({\n  providers: [\n  ],\n  imports: [\n    HttpClientModule\n  ]\n})\nexport class NgStrapiModule {\n  public static forRoot(baseUrl: string, storeConfig?: StoreConfig): ModuleWithProviders {\n    return {\n      ngModule: NgStrapiModule,\n      providers: [\n        HttpService,\n        { provide: 'config', useValue: storeConfig },\n        { provide: 'baseUrl', useValue: baseUrl },\n        { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptorService, multi: true }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/ProviderToken.html":{"url":"interfaces/ProviderToken.html","title":"interface - ProviderToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProviderToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/models/providerToken.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        access_token\n                                \n                                \n                                            Opcional\n                                        code\n                                \n                                \n                                            Opcional\n                                        oauth_token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oauth_token\n                                    \n                                \n                                \n                                    \n                                        oauth_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProviderToken {\n  access_token?: string;\n  code?: string;\n  oauth_token?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interfaces/StoreConfig.html":{"url":"interfaces/StoreConfig.html","title":"interface - StoreConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StoreConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/models/storeConfig.ts\n        \n\n\n\n        \n            Índice\n            \n                \n                    \n                        \n                            Propiedades\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Opcional\n                                        cookie\n                                \n                                \n                                            Opcional\n                                        localStorage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Propiedades\n                    \n                        \n                                \n                                    \n                                        \n                                        cookie\n                                    \n                                \n                                \n                                    \n                                        cookie:         CookieConfig | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         CookieConfig | \"undefined\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localStorage\n                                    \n                                \n                                \n                                    \n                                        localStorage:         LocalStorageConfig | \"undefined\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Tipo :         LocalStorageConfig | \"undefined\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Opcional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CookieConfig } from './cookieConfig';\nimport { LocalStorageConfig } from './localStorageConfig';\n\nexport interface StoreConfig {\n  cookie?: CookieConfig | false;\n  localStorage?: LocalStorageConfig | false;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interceptors/TokenInterceptorService.html":{"url":"interceptors/TokenInterceptorService.html","title":"interceptor - TokenInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptores\n  TokenInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/lib/services/token-interceptor.service.ts\n        \n\n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Definido en src/lib/services/token-interceptor.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Definido en src/lib/services/token-interceptor.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Devuelve :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private auth: AuthService) { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n\n    if (this.auth.getToken()) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this.auth.getToken()}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Cobertura de la documentación\n\n\n\n    \n\n\n\n    \n        \n            Fichero\n            Tipo\n            Identificador\n            Declaraciones\n        \n    \n    \n        \n            \n                \n                src/lib/models/authentication.ts\n            \n            interface\n            Authentication\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/models/cookieConfig.ts\n            \n            interface\n            CookieConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/models/file.ts\n            \n            interface\n            File\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/lib/models/localStorageConfig.ts\n            \n            interface\n            LocalStorageConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/models/providerToken.ts\n            \n            interface\n            ProviderToken\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/models/storeConfig.ts\n            \n            interface\n            StoreConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/lib/services/http.service.ts\n            \n            injectable\n            HttpService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lib/services/jwt.service.ts\n            \n            injectable\n            JwtService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/lib/services/token-interceptor.service.ts\n            \n            interceptor\n            TokenInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencias entre pares\n    \n    \n        \n            @angular/common : ^8.2.5\n        \n            @angular/core : ^8.2.5\n        \n            rxjs : ~6.4.0\n        \n            js-cookie : ^2.2.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgStrapi\n\nInstalar\nnpm install ng-strapiImportar\nImportar modulo NgStrapiModule\nimport { NgStrapiModule } from 'ng-strapi';\n\n@NgModule({\n    imports: [\n      NgStrapiModule.forRoot(\n        'http://localhost:1337', //Url de strapi\n        {\n          cookie: {\n            key: 'jwt',\n            options: {\n              path: '/'\n            }\n          },\n          localStorage: {\n            key: 'jwt'\n          }\n        });\n    ]\n})\nSe recomienda usar localStorage en null\n\nUsar\nimport { AuthService, HttpService } from 'ng-strapi';\n\nconstructor(private auth: AuthServiceStrapi, private http: HttpService) {}Autenticación\nLocal\nthis.auth.login(username, password);Providers\n// Redirija a su usuario a la página de autenticación del proveedor.\nwindow.location = this.auth.getProviderAuthenticationUrl('facebook');Una vez autorizado, el proveedor redirigirá al usuario a su aplicación con un token de acceso en la URL.\n// Complete la autenticación: (El SDK almacenará el token de acceso por usted)\nthis.auth.authenticateProvider('facebook');Datos\nAhora puede buscar API privadas\nthis.http.getEntries('users').subscribe(users => {\n  //Aquí trate sus datos\n});API\nAutenticación API\nregister(data: any): Observable\n\nlogin(identifier: string, password: string): Observable\n\ngetCurrentUser(): Observable\n\nisAuthenticated(): boolean\n\nlogout(): boolean\n\nforgotPassword(email: string, url: string)\n\nresetPassword(code: string, password: string, passwordConfirmation: string)\n\ngetProviderAuthenticationUrl(provider: Provider): string\n\nauthenticateProvider(provider: Provider, params?: ProviderToken): ObservableHttp\ngetEntries(contentTypePluralized: string, params?: HttpParams): Observable\n\ngetEntryCount(contentType: string, params?: HttpParams): Observable\n\ngetEntry(contentTypePluralized: string, id: string): Observable\n\ncreateEntry(contentTypePluralized: string, data: T, params?: HttpParams): Observable\n\nupdateEntry(contentTypePluralized: string, id: string, data: T, params?: HttpParams): Observable\n\ndeleteEntry(contentTypePluralized: string, id: string): Observable\n\nsearchFiles(query: string): Observable\n\ngetFiles(params?: HttpParams): Observable\n\ngetFile(id: string): Observable\n\nupload(data: FormData, params?: HttpParams): Observable\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Módulos\n\n\n    \n            \n                \n                    \n                        NgStrapiModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Descripción general\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Módulo\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Inyectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscelánea\n  Alias de tipo\n\n\n\n    Índice\n    \n        \n            \n                \n                    \n                        \n                            Provider   (src/.../provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/models/provider.ts\n    \n    \n        \n            \n                \n                    \n                    Provider\n                \n            \n            \n                \n                        \"facebook\" | \"google\" | \"github\" | \"twitter\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"}}
}
